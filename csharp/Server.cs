// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/server.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from proto/server.proto</summary>
public static partial class ServerReflection {

  #region Descriptor
  /// <summary>File descriptor for proto/server.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ServerReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChJwcm90by9zZXJ2ZXIucHJvdG8aEXByb3RvL3R5cGVzLnByb3RvIsEBCgxM",
          "b2dpblJlcXVlc3QSDAoEbmFtZRgBIAEoCRIQCghwcm90b2NvbBgCIAEoDRIW",
          "Cg5vbmxpbmVfcGxheWVycxgDIAEoDRITCgttYXhfcGxheWVycxgEIAEoDRIM",
          "CgRtb3RkGAUgASgJEhAKCHNvZnR3YXJlGAYgASgJEgwKBGF1dGgYByABKAgS",
          "DgoGc2VjcmV0GAggASgJEhAKCGlzX3Byb3h5GAkgASgIEhQKDHByb3RvY29s",
          "X3JldhgKIAEoBSIsCgtMb2dpblN0YXR1cxIPCgdtZXNzYWdlGAEgASgJEgwK",
          "BHRpbWUYAiABKAQieQoMTG9naW5TdWNjZXNzEg8KB21lc3NhZ2UYASABKAkS",
          "DAoEdGltZRgCIAEoBBIOCgZhc3NldHMYAyABKAkSGwoJaXRlbXNfZGVmGAQg",
          "AygLMgguSXRlbURlZhIdCgpibG9ja3NfZGVmGAUgAygLMgkuQmxvY2tEZWYi",
          "FAoEUGluZxIMCgR0aW1lGAEgASgEIv4BCgtQbGF5ZXJTcGF3bhINCgV4X3Bv",
          "cxgBIAEoARINCgV5X3BvcxgCIAEoARINCgV6X3BvcxgDIAEoARIQCghyb3Rh",
          "dGlvbhgEIAEoAhINCgVwaXRjaBgFIAEoAhIsCghtb3ZlbWVudBgGIAMoCzIa",
          "LlBsYXllclNwYXduLk1vdmVtZW50RW50cnkSIwoJaW52ZW50b3J5GAcgASgL",
          "MhAuUGxheWVySW52ZW50b3J5Eh0KBmVudGl0eRgIIAEoCzINLlBsYXllckVu",
          "dGl0eRovCg1Nb3ZlbWVudEVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgC",
          "IAEoAToCOAEiQwoKUGxheWVyS2ljaxInCgZyZWFzb24YASADKAsyFy5CYXNp",
          "Y0NoYXRDb21wb25lbnRUeXBlEgwKBHRpbWUYAiABKAQiWwoMUGxheWVyRW50",
          "aXR5EgwKBHV1aWQYASABKAkSDQoFbW9kZWwYAiABKAkSDwoHdGV4dHVyZRgD",
          "IAEoCRIOCgZoZWlnaHQYBCABKAISDQoFd2l0ZGgYBSABKAIiUgoOUGxheWVy",
          "VGVsZXBvcnQSCQoBeBgBIAEoARIJCgF5GAIgASgBEgkKAXoYAyABKAESEAoI",
          "cm90YXRpb24YBCABKAISDQoFcGl0Y2gYBSABKAIiOQoSUGxheWVyRW50ZXJW",
          "ZWhpY2xlEgwKBHV1aWQYASABKAkSFQoNYWxsb3dfY29udHJvbBgCIAEoCCLI",
          "AgoPUGxheWVySW52ZW50b3J5EgwKBHNpemUYASABKA0SKAoEbWFpbhgCIAMo",
          "CzIaLlBsYXllckludmVudG9yeS5NYWluRW50cnkSKgoFYXJtb3IYAyADKAsy",
          "Gy5QbGF5ZXJJbnZlbnRvcnkuQXJtb3JFbnRyeRIwCghjcmFmdGluZxgEIAMo",
          "CzIeLlBsYXllckludmVudG9yeS5DcmFmdGluZ0VudHJ5GjIKCU1haW5FbnRy",
          "eRILCgNrZXkYASABKA0SFAoFdmFsdWUYAiABKAsyBS5JdGVtOgI4ARozCgpB",
          "cm1vckVudHJ5EgsKA2tleRgBIAEoDRIUCgV2YWx1ZRgCIAEoCzIFLkl0ZW06",
          "AjgBGjYKDUNyYWZ0aW5nRW50cnkSCwoDa2V5GAEgASgNEhQKBXZhbHVlGAIg",
          "ASgLMgUuSXRlbToCOAEiUwoQUGxheWVyU2xvdFVwZGF0ZRIMCgRzbG90GAEg",
          "ASgFEhwKBHR5cGUYAiABKA4yDi5JbnZlbnRvcnlUeXBlEhMKBGl0ZW0YAyAB",
          "KAsyBS5JdGVtIjUKElBsYXllckFwcGx5SW1wdWxzZRIJCgF4GAEgASgCEgkK",
          "AXkYAiABKAISCQoBehgDIAEoAiIyChRQbGF5ZXJVcGRhdGVNb3ZlbWVudBIL",
          "CgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAEiMQoTUGxheWVyVXBkYXRlUGh5",
          "c2ljcxILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAEiKgoMUGxheWVySGVh",
          "bHRoEg0KBXZhbHVlGAEgASgCEgsKA21heBgCIAEoAiIkChNQbGF5ZXJTZXRC",
          "bG9ja1JlYWNoEg0KBXZhbHVlGAEgASgCIrQBChNQbGF5ZXJPcGVuSW52ZW50",
          "b3J5EhwKBHR5cGUYASABKA4yDi5Db250YWluZXJUeXBlEgwKBG5hbWUYAiAB",
          "KAkSDAoEc2l6ZRgDIAEoDRIuCgVpdGVtcxgEIAMoCzIfLlBsYXllck9wZW5J",
          "bnZlbnRvcnkuSXRlbXNFbnRyeRozCgpJdGVtc0VudHJ5EgsKA2tleRgBIAEo",
          "DRIUCgV2YWx1ZRgCIAEoCzIFLkl0ZW06AjgBIpQBChlQbGF5ZXJVcGRhdGVP",
          "cGVuSW52ZW50b3J5EgwKBG5hbWUYASABKAkSNAoFaXRlbXMYAiADKAsyJS5Q",
          "bGF5ZXJVcGRhdGVPcGVuSW52ZW50b3J5Lkl0ZW1zRW50cnkaMwoKSXRlbXNF",
          "bnRyeRILCgNrZXkYASABKA0SFAoFdmFsdWUYAiABKAsyBS5JdGVtOgI4ASKr",
          "AQoJU291bmRQbGF5Eg0KBXNvdW5kGAEgASgJEg4KBnZvbHVtZRgCIAEoDRIJ",
          "CgF4GAMgASgBEgkKAXkYBCABKAESCQoBehgFIAEoARIdCgR0eXBlGAYgASgO",
          "Mg8uU291bmRQbGF5LlR5cGUiPwoEVHlwZRILCgdHRU5FUkFMEAASCgoGRU5U",
          "SVRZEAESCQoFQkxPQ0sQAhIJCgVNVVNJQxADEggKBFNFTEYQBCJACgtDaGF0",
          "TWVzc2FnZRIjCgdtZXNzYWdlGAEgAygLMhIuQ2hhdENvbXBvbmVudFR5cGUS",
          "DAoEdGltZRgCIAEoBCKhAQoPVXBkYXRlVGV4dEJvYXJkEiMKBHR5cGUYASAB",
          "KA4yFS5VcGRhdGVUZXh0Qm9hcmQuVHlwZRIoCgdtZXNzYWdlGAIgAygLMhcu",
          "QmFzaWNDaGF0Q29tcG9uZW50VHlwZRIMCgR0aW1lGAMgASgEIjEKBFR5cGUS",
          "BwoDVEFCEAASCAoEU0lERRABEgoKBkNFTlRFUhACEgoKBkhPVEJBUhADIp8C",
          "CgxFbnRpdHlDcmVhdGUSDAoEdXVpZBgBIAEoCRIJCgF4GAIgASgBEgkKAXkY",
          "AyABKAESCQoBehgEIAEoARIQCghyb3RhdGlvbhgFIAEoAhINCgVwaXRjaBgG",
          "IAEoAhINCgVtb2RlbBgHIAEoCRIPCgd0ZXh0dXJlGAggASgJEiUKBG5hbWUY",
          "CSADKAsyFy5CYXNpY0NoYXRDb21wb25lbnRUeXBlEg4KBmhpdGJveBgKIAMo",
          "AhIRCgloZWxkX2l0ZW0YCyABKAkSJwoFYXJtb3IYDCADKAsyGC5FbnRpdHlD",
          "cmVhdGUuQXJtb3JFbnRyeRosCgpBcm1vckVudHJ5EgsKA2tleRgBIAEoDRIN",
          "CgV2YWx1ZRgCIAEoCToCOAEiHAoMRW50aXR5UmVtb3ZlEgwKBHV1aWQYASAB",
          "KAkiXAoKRW50aXR5TW92ZRIMCgR1dWlkGAEgASgJEgkKAXgYAiABKAESCQoB",
          "eRgDIAEoARIJCgF6GAQgASgBEhAKCHJvdGF0aW9uGAUgASgCEg0KBXBpdGNo",
          "GAYgASgCIj8KEEVudGl0eU5hbWVVcGRhdGUSDAoEdXVpZBgBIAEoCRIMCgRu",
          "YW1lGAIgASgJEg8KB3Zpc2libGUYAyABKAgiKgoORW50aXR5SGVsZEl0ZW0S",
          "DAoEdXVpZBgBIAEoCRIKCgJpZBgCIAEoCSI1CgtFbnRpdHlBcm1vchIMCgR1",
          "dWlkGAEgASgJEgwKBHR5cGUYAiABKAUSCgoCaWQYAyABKAkiTwoNRW50aXR5",
          "QW5pbWF0ZRIMCgR1dWlkGAEgASgJEhEKCWFuaW1hdGlvbhgCIAEoCRIMCgR0",
          "aW1lGAMgASgNEg8KB3JlcGxhY2UYBCABKAgiUgoQV29ybGRCbG9ja1VwZGF0",
          "ZRIJCgF4GAEgASgREgkKAXkYAiABKBESCQoBehgDIAEoERIKCgJpZBgEIAEo",
          "DRIRCglwYXJ0aWNsZXMYBSABKAgiOgoVV29ybGRNdWx0aUJsb2NrVXBkYXRl",
          "EiEKBmJsb2NrcxgBIAMoCzIRLldvcmxkQmxvY2tVcGRhdGUifQoOV29ybGRD",
          "aHVua0xvYWQSCQoBeBgBIAEoERIJCgF5GAIgASgREgkKAXoYAyABKBESDgoG",
          "aGVpZ2h0GAQgASgREhIKCmNvbXByZXNzZWQYBSABKAgSEgoKYmxvY2tfZGF0",
          "YRgGIAEoDBISCgpsaWdodF9kYXRhGAcgASgMIkMKEFdvcmxkQ2h1bmtVbmxv",
          "YWQSCQoBeBgBIAEoERIJCgF5GAIgASgREgkKAXoYAyABKBESDgoGaGVpZ2h0",
          "GAQgASgRIjUKEldvcmxkQ2h1bmtJc0xvYWRlZBIJCgF4GAEgASgREgkKAXkY",
          "AiABKBESCQoBehgDIAEoESInChRXb3JsZENodW5rc1JlbW92ZUFsbBIPCgdj",
          "b25maXJtGAEgASgIIiYKFUVudmlyb25tZW50VGltZVVwZGF0ZRINCgV2YWx1",
          "ZRgBIAEoBSKNAQoURW52aXJvbm1lbnRGb2dVcGRhdGUSDAoEbW9kZRgBIAEo",
          "DRIPCgdkZW5zaXR5GAIgASgCEg0KBXN0YXJ0GAMgASgCEgsKA2VuZBgEIAEo",
          "AhIRCgljb2xvcl9yZWQYBSABKAISEwoLY29sb3JfZ3JlZW4YBiABKAISEgoK",
          "Y29sb3JfYmx1ZRgHIAEoAiL7AQoURW52aXJvbm1lbnRTa3lVcGRhdGUSDgoG",
          "Y2xvdWRzGAEgASgIEhEKCWNvbG9yX3JlZBgCIAEoAhITCgtjb2xvcl9ncmVl",
          "bhgDIAEoAhISCgpjb2xvcl9ibHVlGAQgASgCEhUKDWNvbG9yX3JlZF90b3AY",
          "BSABKAISFwoPY29sb3JfZ3JlZW5fdG9wGAYgASgCEhYKDmNvbG9yX2JsdWVf",
          "dG9wGAcgASgCEhgKEGNvbG9yX3JlZF9ib3R0b20YCCABKAISGgoSY29sb3Jf",
          "Z3JlZW5fYm90dG9tGAkgASgCEhkKEWNvbG9yX2JsdWVfYm90dG9tGAogASgC",
          "IjcKFEVudmlyb25tZW50U2V0U2t5Ym94Eg4KBmVuYWJsZRgBIAEoCBIPCgd0",
          "ZXh0dXJlGAIgASgJIjwKDVBsdWdpbk1lc3NhZ2USCwoDa2V5GAEgASgJEg8K",
          "B3ZlcnNpb24YAiABKA0SDQoFdmFsdWUYAyABKAxiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::TypesReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::LoginRequest), global::LoginRequest.Parser, new[]{ "Name", "Protocol", "OnlinePlayers", "MaxPlayers", "Motd", "Software", "Auth", "Secret", "IsProxy", "ProtocolRev" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LoginStatus), global::LoginStatus.Parser, new[]{ "Message", "Time" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LoginSuccess), global::LoginSuccess.Parser, new[]{ "Message", "Time", "Assets", "ItemsDef", "BlocksDef" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Ping), global::Ping.Parser, new[]{ "Time" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerSpawn), global::PlayerSpawn.Parser, new[]{ "XPos", "YPos", "ZPos", "Rotation", "Pitch", "Movement", "Inventory", "Entity" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerKick), global::PlayerKick.Parser, new[]{ "Reason", "Time" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerEntity), global::PlayerEntity.Parser, new[]{ "Uuid", "Model", "Texture", "Height", "Witdh" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerTeleport), global::PlayerTeleport.Parser, new[]{ "X", "Y", "Z", "Rotation", "Pitch" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerEnterVehicle), global::PlayerEnterVehicle.Parser, new[]{ "Uuid", "AllowControl" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerInventory), global::PlayerInventory.Parser, new[]{ "Size", "Main", "Armor", "Crafting" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerSlotUpdate), global::PlayerSlotUpdate.Parser, new[]{ "Slot", "Type", "Item" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerApplyImpulse), global::PlayerApplyImpulse.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerUpdateMovement), global::PlayerUpdateMovement.Parser, new[]{ "Key", "Value" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerUpdatePhysics), global::PlayerUpdatePhysics.Parser, new[]{ "Key", "Value" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerHealth), global::PlayerHealth.Parser, new[]{ "Value", "Max" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerSetBlockReach), global::PlayerSetBlockReach.Parser, new[]{ "Value" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerOpenInventory), global::PlayerOpenInventory.Parser, new[]{ "Type", "Name", "Size", "Items" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerUpdateOpenInventory), global::PlayerUpdateOpenInventory.Parser, new[]{ "Name", "Items" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::SoundPlay), global::SoundPlay.Parser, new[]{ "Sound", "Volume", "X", "Y", "Z", "Type" }, null, new[]{ typeof(global::SoundPlay.Types.Type) }, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ChatMessage), global::ChatMessage.Parser, new[]{ "Message", "Time" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateTextBoard), global::UpdateTextBoard.Parser, new[]{ "Type", "Message", "Time" }, null, new[]{ typeof(global::UpdateTextBoard.Types.Type) }, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EntityCreate), global::EntityCreate.Parser, new[]{ "Uuid", "X", "Y", "Z", "Rotation", "Pitch", "Model", "Texture", "Name", "Hitbox", "HeldItem", "Armor" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::EntityRemove), global::EntityRemove.Parser, new[]{ "Uuid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EntityMove), global::EntityMove.Parser, new[]{ "Uuid", "X", "Y", "Z", "Rotation", "Pitch" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EntityNameUpdate), global::EntityNameUpdate.Parser, new[]{ "Uuid", "Name", "Visible" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EntityHeldItem), global::EntityHeldItem.Parser, new[]{ "Uuid", "Id" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EntityArmor), global::EntityArmor.Parser, new[]{ "Uuid", "Type", "Id" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EntityAnimate), global::EntityAnimate.Parser, new[]{ "Uuid", "Animation", "Time", "Replace" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::WorldBlockUpdate), global::WorldBlockUpdate.Parser, new[]{ "X", "Y", "Z", "Id", "Particles" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::WorldMultiBlockUpdate), global::WorldMultiBlockUpdate.Parser, new[]{ "Blocks" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::WorldChunkLoad), global::WorldChunkLoad.Parser, new[]{ "X", "Y", "Z", "Height", "Compressed", "BlockData", "LightData" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::WorldChunkUnload), global::WorldChunkUnload.Parser, new[]{ "X", "Y", "Z", "Height" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::WorldChunkIsLoaded), global::WorldChunkIsLoaded.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::WorldChunksRemoveAll), global::WorldChunksRemoveAll.Parser, new[]{ "Confirm" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EnvironmentTimeUpdate), global::EnvironmentTimeUpdate.Parser, new[]{ "Value" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EnvironmentFogUpdate), global::EnvironmentFogUpdate.Parser, new[]{ "Mode", "Density", "Start", "End", "ColorRed", "ColorGreen", "ColorBlue" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EnvironmentSkyUpdate), global::EnvironmentSkyUpdate.Parser, new[]{ "Clouds", "ColorRed", "ColorGreen", "ColorBlue", "ColorRedTop", "ColorGreenTop", "ColorBlueTop", "ColorRedBottom", "ColorGreenBottom", "ColorBlueBottom" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EnvironmentSetSkybox), global::EnvironmentSetSkybox.Parser, new[]{ "Enable", "Texture" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PluginMessage), global::PluginMessage.Parser, new[]{ "Key", "Version", "Value" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class LoginRequest : pb::IMessage<LoginRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<LoginRequest> _parser = new pb::MessageParser<LoginRequest>(() => new LoginRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LoginRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginRequest(LoginRequest other) : this() {
    name_ = other.name_;
    protocol_ = other.protocol_;
    onlinePlayers_ = other.onlinePlayers_;
    maxPlayers_ = other.maxPlayers_;
    motd_ = other.motd_;
    software_ = other.software_;
    auth_ = other.auth_;
    secret_ = other.secret_;
    isProxy_ = other.isProxy_;
    protocolRev_ = other.protocolRev_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginRequest Clone() {
    return new LoginRequest(this);
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 1;
  private string name_ = "";
  /// <summary>
  /// Server's name
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "protocol" field.</summary>
  public const int ProtocolFieldNumber = 2;
  private uint protocol_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Protocol {
    get { return protocol_; }
    set {
      protocol_ = value;
    }
  }

  /// <summary>Field number for the "online_players" field.</summary>
  public const int OnlinePlayersFieldNumber = 3;
  private uint onlinePlayers_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint OnlinePlayers {
    get { return onlinePlayers_; }
    set {
      onlinePlayers_ = value;
    }
  }

  /// <summary>Field number for the "max_players" field.</summary>
  public const int MaxPlayersFieldNumber = 4;
  private uint maxPlayers_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint MaxPlayers {
    get { return maxPlayers_; }
    set {
      maxPlayers_ = value;
    }
  }

  /// <summary>Field number for the "motd" field.</summary>
  public const int MotdFieldNumber = 5;
  private string motd_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Motd {
    get { return motd_; }
    set {
      motd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "software" field.</summary>
  public const int SoftwareFieldNumber = 6;
  private string software_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Software {
    get { return software_; }
    set {
      software_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "auth" field.</summary>
  public const int AuthFieldNumber = 7;
  private bool auth_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Auth {
    get { return auth_; }
    set {
      auth_ = value;
    }
  }

  /// <summary>Field number for the "secret" field.</summary>
  public const int SecretFieldNumber = 8;
  private string secret_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Secret {
    get { return secret_; }
    set {
      secret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "is_proxy" field.</summary>
  public const int IsProxyFieldNumber = 9;
  private bool isProxy_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsProxy {
    get { return isProxy_; }
    set {
      isProxy_ = value;
    }
  }

  /// <summary>Field number for the "protocol_rev" field.</summary>
  public const int ProtocolRevFieldNumber = 10;
  private int protocolRev_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ProtocolRev {
    get { return protocolRev_; }
    set {
      protocolRev_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LoginRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LoginRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if (Protocol != other.Protocol) return false;
    if (OnlinePlayers != other.OnlinePlayers) return false;
    if (MaxPlayers != other.MaxPlayers) return false;
    if (Motd != other.Motd) return false;
    if (Software != other.Software) return false;
    if (Auth != other.Auth) return false;
    if (Secret != other.Secret) return false;
    if (IsProxy != other.IsProxy) return false;
    if (ProtocolRev != other.ProtocolRev) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (Protocol != 0) hash ^= Protocol.GetHashCode();
    if (OnlinePlayers != 0) hash ^= OnlinePlayers.GetHashCode();
    if (MaxPlayers != 0) hash ^= MaxPlayers.GetHashCode();
    if (Motd.Length != 0) hash ^= Motd.GetHashCode();
    if (Software.Length != 0) hash ^= Software.GetHashCode();
    if (Auth != false) hash ^= Auth.GetHashCode();
    if (Secret.Length != 0) hash ^= Secret.GetHashCode();
    if (IsProxy != false) hash ^= IsProxy.GetHashCode();
    if (ProtocolRev != 0) hash ^= ProtocolRev.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Name.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (Protocol != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Protocol);
    }
    if (OnlinePlayers != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(OnlinePlayers);
    }
    if (MaxPlayers != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(MaxPlayers);
    }
    if (Motd.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Motd);
    }
    if (Software.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(Software);
    }
    if (Auth != false) {
      output.WriteRawTag(56);
      output.WriteBool(Auth);
    }
    if (Secret.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(Secret);
    }
    if (IsProxy != false) {
      output.WriteRawTag(72);
      output.WriteBool(IsProxy);
    }
    if (ProtocolRev != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(ProtocolRev);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Name.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (Protocol != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Protocol);
    }
    if (OnlinePlayers != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(OnlinePlayers);
    }
    if (MaxPlayers != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(MaxPlayers);
    }
    if (Motd.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Motd);
    }
    if (Software.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(Software);
    }
    if (Auth != false) {
      output.WriteRawTag(56);
      output.WriteBool(Auth);
    }
    if (Secret.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(Secret);
    }
    if (IsProxy != false) {
      output.WriteRawTag(72);
      output.WriteBool(IsProxy);
    }
    if (ProtocolRev != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(ProtocolRev);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (Protocol != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Protocol);
    }
    if (OnlinePlayers != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OnlinePlayers);
    }
    if (MaxPlayers != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxPlayers);
    }
    if (Motd.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Motd);
    }
    if (Software.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Software);
    }
    if (Auth != false) {
      size += 1 + 1;
    }
    if (Secret.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Secret);
    }
    if (IsProxy != false) {
      size += 1 + 1;
    }
    if (ProtocolRev != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProtocolRev);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LoginRequest other) {
    if (other == null) {
      return;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.Protocol != 0) {
      Protocol = other.Protocol;
    }
    if (other.OnlinePlayers != 0) {
      OnlinePlayers = other.OnlinePlayers;
    }
    if (other.MaxPlayers != 0) {
      MaxPlayers = other.MaxPlayers;
    }
    if (other.Motd.Length != 0) {
      Motd = other.Motd;
    }
    if (other.Software.Length != 0) {
      Software = other.Software;
    }
    if (other.Auth != false) {
      Auth = other.Auth;
    }
    if (other.Secret.Length != 0) {
      Secret = other.Secret;
    }
    if (other.IsProxy != false) {
      IsProxy = other.IsProxy;
    }
    if (other.ProtocolRev != 0) {
      ProtocolRev = other.ProtocolRev;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 16: {
          Protocol = input.ReadUInt32();
          break;
        }
        case 24: {
          OnlinePlayers = input.ReadUInt32();
          break;
        }
        case 32: {
          MaxPlayers = input.ReadUInt32();
          break;
        }
        case 42: {
          Motd = input.ReadString();
          break;
        }
        case 50: {
          Software = input.ReadString();
          break;
        }
        case 56: {
          Auth = input.ReadBool();
          break;
        }
        case 66: {
          Secret = input.ReadString();
          break;
        }
        case 72: {
          IsProxy = input.ReadBool();
          break;
        }
        case 80: {
          ProtocolRev = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 16: {
          Protocol = input.ReadUInt32();
          break;
        }
        case 24: {
          OnlinePlayers = input.ReadUInt32();
          break;
        }
        case 32: {
          MaxPlayers = input.ReadUInt32();
          break;
        }
        case 42: {
          Motd = input.ReadString();
          break;
        }
        case 50: {
          Software = input.ReadString();
          break;
        }
        case 56: {
          Auth = input.ReadBool();
          break;
        }
        case 66: {
          Secret = input.ReadString();
          break;
        }
        case 72: {
          IsProxy = input.ReadBool();
          break;
        }
        case 80: {
          ProtocolRev = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class LoginStatus : pb::IMessage<LoginStatus>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<LoginStatus> _parser = new pb::MessageParser<LoginStatus>(() => new LoginStatus());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LoginStatus> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginStatus() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginStatus(LoginStatus other) : this() {
    message_ = other.message_;
    time_ = other.time_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginStatus Clone() {
    return new LoginStatus(this);
  }

  /// <summary>Field number for the "message" field.</summary>
  public const int MessageFieldNumber = 1;
  private string message_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Message {
    get { return message_; }
    set {
      message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "time" field.</summary>
  public const int TimeFieldNumber = 2;
  private ulong time_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong Time {
    get { return time_; }
    set {
      time_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LoginStatus);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LoginStatus other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Message != other.Message) return false;
    if (Time != other.Time) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Message.Length != 0) hash ^= Message.GetHashCode();
    if (Time != 0UL) hash ^= Time.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Message.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Message);
    }
    if (Time != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(Time);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Message.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Message);
    }
    if (Time != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(Time);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Message.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
    }
    if (Time != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Time);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LoginStatus other) {
    if (other == null) {
      return;
    }
    if (other.Message.Length != 0) {
      Message = other.Message;
    }
    if (other.Time != 0UL) {
      Time = other.Time;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Message = input.ReadString();
          break;
        }
        case 16: {
          Time = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Message = input.ReadString();
          break;
        }
        case 16: {
          Time = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class LoginSuccess : pb::IMessage<LoginSuccess>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<LoginSuccess> _parser = new pb::MessageParser<LoginSuccess>(() => new LoginSuccess());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LoginSuccess> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginSuccess() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginSuccess(LoginSuccess other) : this() {
    message_ = other.message_;
    time_ = other.time_;
    assets_ = other.assets_;
    itemsDef_ = other.itemsDef_.Clone();
    blocksDef_ = other.blocksDef_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginSuccess Clone() {
    return new LoginSuccess(this);
  }

  /// <summary>Field number for the "message" field.</summary>
  public const int MessageFieldNumber = 1;
  private string message_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Message {
    get { return message_; }
    set {
      message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "time" field.</summary>
  public const int TimeFieldNumber = 2;
  private ulong time_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong Time {
    get { return time_; }
    set {
      time_ = value;
    }
  }

  /// <summary>Field number for the "assets" field.</summary>
  public const int AssetsFieldNumber = 3;
  private string assets_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Assets {
    get { return assets_; }
    set {
      assets_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "items_def" field.</summary>
  public const int ItemsDefFieldNumber = 4;
  private static readonly pb::FieldCodec<global::ItemDef> _repeated_itemsDef_codec
      = pb::FieldCodec.ForMessage(34, global::ItemDef.Parser);
  private readonly pbc::RepeatedField<global::ItemDef> itemsDef_ = new pbc::RepeatedField<global::ItemDef>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ItemDef> ItemsDef {
    get { return itemsDef_; }
  }

  /// <summary>Field number for the "blocks_def" field.</summary>
  public const int BlocksDefFieldNumber = 5;
  private static readonly pb::FieldCodec<global::BlockDef> _repeated_blocksDef_codec
      = pb::FieldCodec.ForMessage(42, global::BlockDef.Parser);
  private readonly pbc::RepeatedField<global::BlockDef> blocksDef_ = new pbc::RepeatedField<global::BlockDef>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::BlockDef> BlocksDef {
    get { return blocksDef_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LoginSuccess);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LoginSuccess other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Message != other.Message) return false;
    if (Time != other.Time) return false;
    if (Assets != other.Assets) return false;
    if(!itemsDef_.Equals(other.itemsDef_)) return false;
    if(!blocksDef_.Equals(other.blocksDef_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Message.Length != 0) hash ^= Message.GetHashCode();
    if (Time != 0UL) hash ^= Time.GetHashCode();
    if (Assets.Length != 0) hash ^= Assets.GetHashCode();
    hash ^= itemsDef_.GetHashCode();
    hash ^= blocksDef_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Message.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Message);
    }
    if (Time != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(Time);
    }
    if (Assets.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Assets);
    }
    itemsDef_.WriteTo(output, _repeated_itemsDef_codec);
    blocksDef_.WriteTo(output, _repeated_blocksDef_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Message.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Message);
    }
    if (Time != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(Time);
    }
    if (Assets.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Assets);
    }
    itemsDef_.WriteTo(ref output, _repeated_itemsDef_codec);
    blocksDef_.WriteTo(ref output, _repeated_blocksDef_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Message.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
    }
    if (Time != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Time);
    }
    if (Assets.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Assets);
    }
    size += itemsDef_.CalculateSize(_repeated_itemsDef_codec);
    size += blocksDef_.CalculateSize(_repeated_blocksDef_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LoginSuccess other) {
    if (other == null) {
      return;
    }
    if (other.Message.Length != 0) {
      Message = other.Message;
    }
    if (other.Time != 0UL) {
      Time = other.Time;
    }
    if (other.Assets.Length != 0) {
      Assets = other.Assets;
    }
    itemsDef_.Add(other.itemsDef_);
    blocksDef_.Add(other.blocksDef_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Message = input.ReadString();
          break;
        }
        case 16: {
          Time = input.ReadUInt64();
          break;
        }
        case 26: {
          Assets = input.ReadString();
          break;
        }
        case 34: {
          itemsDef_.AddEntriesFrom(input, _repeated_itemsDef_codec);
          break;
        }
        case 42: {
          blocksDef_.AddEntriesFrom(input, _repeated_blocksDef_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Message = input.ReadString();
          break;
        }
        case 16: {
          Time = input.ReadUInt64();
          break;
        }
        case 26: {
          Assets = input.ReadString();
          break;
        }
        case 34: {
          itemsDef_.AddEntriesFrom(ref input, _repeated_itemsDef_codec);
          break;
        }
        case 42: {
          blocksDef_.AddEntriesFrom(ref input, _repeated_blocksDef_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class Ping : pb::IMessage<Ping>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Ping> _parser = new pb::MessageParser<Ping>(() => new Ping());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Ping> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Ping() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Ping(Ping other) : this() {
    time_ = other.time_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Ping Clone() {
    return new Ping(this);
  }

  /// <summary>Field number for the "time" field.</summary>
  public const int TimeFieldNumber = 1;
  private ulong time_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong Time {
    get { return time_; }
    set {
      time_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Ping);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Ping other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Time != other.Time) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Time != 0UL) hash ^= Time.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Time != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(Time);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Time != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(Time);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Time != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Time);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Ping other) {
    if (other == null) {
      return;
    }
    if (other.Time != 0UL) {
      Time = other.Time;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Time = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Time = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class PlayerSpawn : pb::IMessage<PlayerSpawn>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PlayerSpawn> _parser = new pb::MessageParser<PlayerSpawn>(() => new PlayerSpawn());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PlayerSpawn> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerSpawn() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerSpawn(PlayerSpawn other) : this() {
    xPos_ = other.xPos_;
    yPos_ = other.yPos_;
    zPos_ = other.zPos_;
    rotation_ = other.rotation_;
    pitch_ = other.pitch_;
    movement_ = other.movement_.Clone();
    inventory_ = other.inventory_ != null ? other.inventory_.Clone() : null;
    entity_ = other.entity_ != null ? other.entity_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerSpawn Clone() {
    return new PlayerSpawn(this);
  }

  /// <summary>Field number for the "x_pos" field.</summary>
  public const int XPosFieldNumber = 1;
  private double xPos_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double XPos {
    get { return xPos_; }
    set {
      xPos_ = value;
    }
  }

  /// <summary>Field number for the "y_pos" field.</summary>
  public const int YPosFieldNumber = 2;
  private double yPos_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double YPos {
    get { return yPos_; }
    set {
      yPos_ = value;
    }
  }

  /// <summary>Field number for the "z_pos" field.</summary>
  public const int ZPosFieldNumber = 3;
  private double zPos_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double ZPos {
    get { return zPos_; }
    set {
      zPos_ = value;
    }
  }

  /// <summary>Field number for the "rotation" field.</summary>
  public const int RotationFieldNumber = 4;
  private float rotation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Rotation {
    get { return rotation_; }
    set {
      rotation_ = value;
    }
  }

  /// <summary>Field number for the "pitch" field.</summary>
  public const int PitchFieldNumber = 5;
  private float pitch_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Pitch {
    get { return pitch_; }
    set {
      pitch_ = value;
    }
  }

  /// <summary>Field number for the "movement" field.</summary>
  public const int MovementFieldNumber = 6;
  private static readonly pbc::MapField<string, double>.Codec _map_movement_codec
      = new pbc::MapField<string, double>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForDouble(17, 0D), 50);
  private readonly pbc::MapField<string, double> movement_ = new pbc::MapField<string, double>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<string, double> Movement {
    get { return movement_; }
  }

  /// <summary>Field number for the "inventory" field.</summary>
  public const int InventoryFieldNumber = 7;
  private global::PlayerInventory inventory_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PlayerInventory Inventory {
    get { return inventory_; }
    set {
      inventory_ = value;
    }
  }

  /// <summary>Field number for the "entity" field.</summary>
  public const int EntityFieldNumber = 8;
  private global::PlayerEntity entity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PlayerEntity Entity {
    get { return entity_; }
    set {
      entity_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PlayerSpawn);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PlayerSpawn other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(XPos, other.XPos)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(YPos, other.YPos)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ZPos, other.ZPos)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rotation, other.Rotation)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Pitch, other.Pitch)) return false;
    if (!Movement.Equals(other.Movement)) return false;
    if (!object.Equals(Inventory, other.Inventory)) return false;
    if (!object.Equals(Entity, other.Entity)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (XPos != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(XPos);
    if (YPos != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(YPos);
    if (ZPos != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ZPos);
    if (Rotation != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rotation);
    if (Pitch != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Pitch);
    hash ^= Movement.GetHashCode();
    if (inventory_ != null) hash ^= Inventory.GetHashCode();
    if (entity_ != null) hash ^= Entity.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (XPos != 0D) {
      output.WriteRawTag(9);
      output.WriteDouble(XPos);
    }
    if (YPos != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(YPos);
    }
    if (ZPos != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(ZPos);
    }
    if (Rotation != 0F) {
      output.WriteRawTag(37);
      output.WriteFloat(Rotation);
    }
    if (Pitch != 0F) {
      output.WriteRawTag(45);
      output.WriteFloat(Pitch);
    }
    movement_.WriteTo(output, _map_movement_codec);
    if (inventory_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(Inventory);
    }
    if (entity_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(Entity);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (XPos != 0D) {
      output.WriteRawTag(9);
      output.WriteDouble(XPos);
    }
    if (YPos != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(YPos);
    }
    if (ZPos != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(ZPos);
    }
    if (Rotation != 0F) {
      output.WriteRawTag(37);
      output.WriteFloat(Rotation);
    }
    if (Pitch != 0F) {
      output.WriteRawTag(45);
      output.WriteFloat(Pitch);
    }
    movement_.WriteTo(ref output, _map_movement_codec);
    if (inventory_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(Inventory);
    }
    if (entity_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(Entity);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (XPos != 0D) {
      size += 1 + 8;
    }
    if (YPos != 0D) {
      size += 1 + 8;
    }
    if (ZPos != 0D) {
      size += 1 + 8;
    }
    if (Rotation != 0F) {
      size += 1 + 4;
    }
    if (Pitch != 0F) {
      size += 1 + 4;
    }
    size += movement_.CalculateSize(_map_movement_codec);
    if (inventory_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Inventory);
    }
    if (entity_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entity);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PlayerSpawn other) {
    if (other == null) {
      return;
    }
    if (other.XPos != 0D) {
      XPos = other.XPos;
    }
    if (other.YPos != 0D) {
      YPos = other.YPos;
    }
    if (other.ZPos != 0D) {
      ZPos = other.ZPos;
    }
    if (other.Rotation != 0F) {
      Rotation = other.Rotation;
    }
    if (other.Pitch != 0F) {
      Pitch = other.Pitch;
    }
    movement_.Add(other.movement_);
    if (other.inventory_ != null) {
      if (inventory_ == null) {
        Inventory = new global::PlayerInventory();
      }
      Inventory.MergeFrom(other.Inventory);
    }
    if (other.entity_ != null) {
      if (entity_ == null) {
        Entity = new global::PlayerEntity();
      }
      Entity.MergeFrom(other.Entity);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          XPos = input.ReadDouble();
          break;
        }
        case 17: {
          YPos = input.ReadDouble();
          break;
        }
        case 25: {
          ZPos = input.ReadDouble();
          break;
        }
        case 37: {
          Rotation = input.ReadFloat();
          break;
        }
        case 45: {
          Pitch = input.ReadFloat();
          break;
        }
        case 50: {
          movement_.AddEntriesFrom(input, _map_movement_codec);
          break;
        }
        case 58: {
          if (inventory_ == null) {
            Inventory = new global::PlayerInventory();
          }
          input.ReadMessage(Inventory);
          break;
        }
        case 66: {
          if (entity_ == null) {
            Entity = new global::PlayerEntity();
          }
          input.ReadMessage(Entity);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          XPos = input.ReadDouble();
          break;
        }
        case 17: {
          YPos = input.ReadDouble();
          break;
        }
        case 25: {
          ZPos = input.ReadDouble();
          break;
        }
        case 37: {
          Rotation = input.ReadFloat();
          break;
        }
        case 45: {
          Pitch = input.ReadFloat();
          break;
        }
        case 50: {
          movement_.AddEntriesFrom(ref input, _map_movement_codec);
          break;
        }
        case 58: {
          if (inventory_ == null) {
            Inventory = new global::PlayerInventory();
          }
          input.ReadMessage(Inventory);
          break;
        }
        case 66: {
          if (entity_ == null) {
            Entity = new global::PlayerEntity();
          }
          input.ReadMessage(Entity);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class PlayerKick : pb::IMessage<PlayerKick>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PlayerKick> _parser = new pb::MessageParser<PlayerKick>(() => new PlayerKick());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PlayerKick> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerKick() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerKick(PlayerKick other) : this() {
    reason_ = other.reason_.Clone();
    time_ = other.time_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerKick Clone() {
    return new PlayerKick(this);
  }

  /// <summary>Field number for the "reason" field.</summary>
  public const int ReasonFieldNumber = 1;
  private static readonly pb::FieldCodec<global::BasicChatComponentType> _repeated_reason_codec
      = pb::FieldCodec.ForMessage(10, global::BasicChatComponentType.Parser);
  private readonly pbc::RepeatedField<global::BasicChatComponentType> reason_ = new pbc::RepeatedField<global::BasicChatComponentType>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::BasicChatComponentType> Reason {
    get { return reason_; }
  }

  /// <summary>Field number for the "time" field.</summary>
  public const int TimeFieldNumber = 2;
  private ulong time_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong Time {
    get { return time_; }
    set {
      time_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PlayerKick);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PlayerKick other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!reason_.Equals(other.reason_)) return false;
    if (Time != other.Time) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= reason_.GetHashCode();
    if (Time != 0UL) hash ^= Time.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    reason_.WriteTo(output, _repeated_reason_codec);
    if (Time != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(Time);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    reason_.WriteTo(ref output, _repeated_reason_codec);
    if (Time != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(Time);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += reason_.CalculateSize(_repeated_reason_codec);
    if (Time != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Time);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PlayerKick other) {
    if (other == null) {
      return;
    }
    reason_.Add(other.reason_);
    if (other.Time != 0UL) {
      Time = other.Time;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          reason_.AddEntriesFrom(input, _repeated_reason_codec);
          break;
        }
        case 16: {
          Time = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          reason_.AddEntriesFrom(ref input, _repeated_reason_codec);
          break;
        }
        case 16: {
          Time = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class PlayerEntity : pb::IMessage<PlayerEntity>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PlayerEntity> _parser = new pb::MessageParser<PlayerEntity>(() => new PlayerEntity());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PlayerEntity> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerEntity() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerEntity(PlayerEntity other) : this() {
    uuid_ = other.uuid_;
    model_ = other.model_;
    texture_ = other.texture_;
    height_ = other.height_;
    witdh_ = other.witdh_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerEntity Clone() {
    return new PlayerEntity(this);
  }

  /// <summary>Field number for the "uuid" field.</summary>
  public const int UuidFieldNumber = 1;
  private string uuid_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Uuid {
    get { return uuid_; }
    set {
      uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "model" field.</summary>
  public const int ModelFieldNumber = 2;
  private string model_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Model {
    get { return model_; }
    set {
      model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "texture" field.</summary>
  public const int TextureFieldNumber = 3;
  private string texture_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Texture {
    get { return texture_; }
    set {
      texture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "height" field.</summary>
  public const int HeightFieldNumber = 4;
  private float height_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Height {
    get { return height_; }
    set {
      height_ = value;
    }
  }

  /// <summary>Field number for the "witdh" field.</summary>
  public const int WitdhFieldNumber = 5;
  private float witdh_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Witdh {
    get { return witdh_; }
    set {
      witdh_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PlayerEntity);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PlayerEntity other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Uuid != other.Uuid) return false;
    if (Model != other.Model) return false;
    if (Texture != other.Texture) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Height, other.Height)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Witdh, other.Witdh)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
    if (Model.Length != 0) hash ^= Model.GetHashCode();
    if (Texture.Length != 0) hash ^= Texture.GetHashCode();
    if (Height != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Height);
    if (Witdh != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Witdh);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Uuid.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Uuid);
    }
    if (Model.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Model);
    }
    if (Texture.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Texture);
    }
    if (Height != 0F) {
      output.WriteRawTag(37);
      output.WriteFloat(Height);
    }
    if (Witdh != 0F) {
      output.WriteRawTag(45);
      output.WriteFloat(Witdh);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Uuid.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Uuid);
    }
    if (Model.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Model);
    }
    if (Texture.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Texture);
    }
    if (Height != 0F) {
      output.WriteRawTag(37);
      output.WriteFloat(Height);
    }
    if (Witdh != 0F) {
      output.WriteRawTag(45);
      output.WriteFloat(Witdh);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Uuid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
    }
    if (Model.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
    }
    if (Texture.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Texture);
    }
    if (Height != 0F) {
      size += 1 + 4;
    }
    if (Witdh != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PlayerEntity other) {
    if (other == null) {
      return;
    }
    if (other.Uuid.Length != 0) {
      Uuid = other.Uuid;
    }
    if (other.Model.Length != 0) {
      Model = other.Model;
    }
    if (other.Texture.Length != 0) {
      Texture = other.Texture;
    }
    if (other.Height != 0F) {
      Height = other.Height;
    }
    if (other.Witdh != 0F) {
      Witdh = other.Witdh;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Uuid = input.ReadString();
          break;
        }
        case 18: {
          Model = input.ReadString();
          break;
        }
        case 26: {
          Texture = input.ReadString();
          break;
        }
        case 37: {
          Height = input.ReadFloat();
          break;
        }
        case 45: {
          Witdh = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Uuid = input.ReadString();
          break;
        }
        case 18: {
          Model = input.ReadString();
          break;
        }
        case 26: {
          Texture = input.ReadString();
          break;
        }
        case 37: {
          Height = input.ReadFloat();
          break;
        }
        case 45: {
          Witdh = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class PlayerTeleport : pb::IMessage<PlayerTeleport>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PlayerTeleport> _parser = new pb::MessageParser<PlayerTeleport>(() => new PlayerTeleport());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PlayerTeleport> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerTeleport() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerTeleport(PlayerTeleport other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    rotation_ = other.rotation_;
    pitch_ = other.pitch_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerTeleport Clone() {
    return new PlayerTeleport(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private double x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private double y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 3;
  private double z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Z {
    get { return z_; }
    set {
      z_ = value;
    }
  }

  /// <summary>Field number for the "rotation" field.</summary>
  public const int RotationFieldNumber = 4;
  private float rotation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Rotation {
    get { return rotation_; }
    set {
      rotation_ = value;
    }
  }

  /// <summary>Field number for the "pitch" field.</summary>
  public const int PitchFieldNumber = 5;
  private float pitch_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Pitch {
    get { return pitch_; }
    set {
      pitch_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PlayerTeleport);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PlayerTeleport other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Z, other.Z)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rotation, other.Rotation)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Pitch, other.Pitch)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
    if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
    if (Z != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Z);
    if (Rotation != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rotation);
    if (Pitch != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Pitch);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (X != 0D) {
      output.WriteRawTag(9);
      output.WriteDouble(X);
    }
    if (Y != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(Y);
    }
    if (Z != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(Z);
    }
    if (Rotation != 0F) {
      output.WriteRawTag(37);
      output.WriteFloat(Rotation);
    }
    if (Pitch != 0F) {
      output.WriteRawTag(45);
      output.WriteFloat(Pitch);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (X != 0D) {
      output.WriteRawTag(9);
      output.WriteDouble(X);
    }
    if (Y != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(Y);
    }
    if (Z != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(Z);
    }
    if (Rotation != 0F) {
      output.WriteRawTag(37);
      output.WriteFloat(Rotation);
    }
    if (Pitch != 0F) {
      output.WriteRawTag(45);
      output.WriteFloat(Pitch);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0D) {
      size += 1 + 8;
    }
    if (Y != 0D) {
      size += 1 + 8;
    }
    if (Z != 0D) {
      size += 1 + 8;
    }
    if (Rotation != 0F) {
      size += 1 + 4;
    }
    if (Pitch != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PlayerTeleport other) {
    if (other == null) {
      return;
    }
    if (other.X != 0D) {
      X = other.X;
    }
    if (other.Y != 0D) {
      Y = other.Y;
    }
    if (other.Z != 0D) {
      Z = other.Z;
    }
    if (other.Rotation != 0F) {
      Rotation = other.Rotation;
    }
    if (other.Pitch != 0F) {
      Pitch = other.Pitch;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          X = input.ReadDouble();
          break;
        }
        case 17: {
          Y = input.ReadDouble();
          break;
        }
        case 25: {
          Z = input.ReadDouble();
          break;
        }
        case 37: {
          Rotation = input.ReadFloat();
          break;
        }
        case 45: {
          Pitch = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          X = input.ReadDouble();
          break;
        }
        case 17: {
          Y = input.ReadDouble();
          break;
        }
        case 25: {
          Z = input.ReadDouble();
          break;
        }
        case 37: {
          Rotation = input.ReadFloat();
          break;
        }
        case 45: {
          Pitch = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class PlayerEnterVehicle : pb::IMessage<PlayerEnterVehicle>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PlayerEnterVehicle> _parser = new pb::MessageParser<PlayerEnterVehicle>(() => new PlayerEnterVehicle());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PlayerEnterVehicle> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerEnterVehicle() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerEnterVehicle(PlayerEnterVehicle other) : this() {
    uuid_ = other.uuid_;
    allowControl_ = other.allowControl_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerEnterVehicle Clone() {
    return new PlayerEnterVehicle(this);
  }

  /// <summary>Field number for the "uuid" field.</summary>
  public const int UuidFieldNumber = 1;
  private string uuid_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Uuid {
    get { return uuid_; }
    set {
      uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "allow_control" field.</summary>
  public const int AllowControlFieldNumber = 2;
  private bool allowControl_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool AllowControl {
    get { return allowControl_; }
    set {
      allowControl_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PlayerEnterVehicle);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PlayerEnterVehicle other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Uuid != other.Uuid) return false;
    if (AllowControl != other.AllowControl) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
    if (AllowControl != false) hash ^= AllowControl.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Uuid.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Uuid);
    }
    if (AllowControl != false) {
      output.WriteRawTag(16);
      output.WriteBool(AllowControl);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Uuid.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Uuid);
    }
    if (AllowControl != false) {
      output.WriteRawTag(16);
      output.WriteBool(AllowControl);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Uuid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
    }
    if (AllowControl != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PlayerEnterVehicle other) {
    if (other == null) {
      return;
    }
    if (other.Uuid.Length != 0) {
      Uuid = other.Uuid;
    }
    if (other.AllowControl != false) {
      AllowControl = other.AllowControl;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Uuid = input.ReadString();
          break;
        }
        case 16: {
          AllowControl = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Uuid = input.ReadString();
          break;
        }
        case 16: {
          AllowControl = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class PlayerInventory : pb::IMessage<PlayerInventory>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PlayerInventory> _parser = new pb::MessageParser<PlayerInventory>(() => new PlayerInventory());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PlayerInventory> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerInventory() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerInventory(PlayerInventory other) : this() {
    size_ = other.size_;
    main_ = other.main_.Clone();
    armor_ = other.armor_.Clone();
    crafting_ = other.crafting_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerInventory Clone() {
    return new PlayerInventory(this);
  }

  /// <summary>Field number for the "size" field.</summary>
  public const int SizeFieldNumber = 1;
  private uint size_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Size {
    get { return size_; }
    set {
      size_ = value;
    }
  }

  /// <summary>Field number for the "main" field.</summary>
  public const int MainFieldNumber = 2;
  private static readonly pbc::MapField<uint, global::Item>.Codec _map_main_codec
      = new pbc::MapField<uint, global::Item>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForMessage(18, global::Item.Parser), 18);
  private readonly pbc::MapField<uint, global::Item> main_ = new pbc::MapField<uint, global::Item>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::Item> Main {
    get { return main_; }
  }

  /// <summary>Field number for the "armor" field.</summary>
  public const int ArmorFieldNumber = 3;
  private static readonly pbc::MapField<uint, global::Item>.Codec _map_armor_codec
      = new pbc::MapField<uint, global::Item>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForMessage(18, global::Item.Parser), 26);
  private readonly pbc::MapField<uint, global::Item> armor_ = new pbc::MapField<uint, global::Item>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::Item> Armor {
    get { return armor_; }
  }

  /// <summary>Field number for the "crafting" field.</summary>
  public const int CraftingFieldNumber = 4;
  private static readonly pbc::MapField<uint, global::Item>.Codec _map_crafting_codec
      = new pbc::MapField<uint, global::Item>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForMessage(18, global::Item.Parser), 34);
  private readonly pbc::MapField<uint, global::Item> crafting_ = new pbc::MapField<uint, global::Item>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::Item> Crafting {
    get { return crafting_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PlayerInventory);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PlayerInventory other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Size != other.Size) return false;
    if (!Main.Equals(other.Main)) return false;
    if (!Armor.Equals(other.Armor)) return false;
    if (!Crafting.Equals(other.Crafting)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Size != 0) hash ^= Size.GetHashCode();
    hash ^= Main.GetHashCode();
    hash ^= Armor.GetHashCode();
    hash ^= Crafting.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Size != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(Size);
    }
    main_.WriteTo(output, _map_main_codec);
    armor_.WriteTo(output, _map_armor_codec);
    crafting_.WriteTo(output, _map_crafting_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Size != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(Size);
    }
    main_.WriteTo(ref output, _map_main_codec);
    armor_.WriteTo(ref output, _map_armor_codec);
    crafting_.WriteTo(ref output, _map_crafting_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Size != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Size);
    }
    size += main_.CalculateSize(_map_main_codec);
    size += armor_.CalculateSize(_map_armor_codec);
    size += crafting_.CalculateSize(_map_crafting_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PlayerInventory other) {
    if (other == null) {
      return;
    }
    if (other.Size != 0) {
      Size = other.Size;
    }
    main_.Add(other.main_);
    armor_.Add(other.armor_);
    crafting_.Add(other.crafting_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Size = input.ReadUInt32();
          break;
        }
        case 18: {
          main_.AddEntriesFrom(input, _map_main_codec);
          break;
        }
        case 26: {
          armor_.AddEntriesFrom(input, _map_armor_codec);
          break;
        }
        case 34: {
          crafting_.AddEntriesFrom(input, _map_crafting_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Size = input.ReadUInt32();
          break;
        }
        case 18: {
          main_.AddEntriesFrom(ref input, _map_main_codec);
          break;
        }
        case 26: {
          armor_.AddEntriesFrom(ref input, _map_armor_codec);
          break;
        }
        case 34: {
          crafting_.AddEntriesFrom(ref input, _map_crafting_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class PlayerSlotUpdate : pb::IMessage<PlayerSlotUpdate>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PlayerSlotUpdate> _parser = new pb::MessageParser<PlayerSlotUpdate>(() => new PlayerSlotUpdate());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PlayerSlotUpdate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerSlotUpdate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerSlotUpdate(PlayerSlotUpdate other) : this() {
    slot_ = other.slot_;
    type_ = other.type_;
    item_ = other.item_ != null ? other.item_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerSlotUpdate Clone() {
    return new PlayerSlotUpdate(this);
  }

  /// <summary>Field number for the "slot" field.</summary>
  public const int SlotFieldNumber = 1;
  private int slot_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Slot {
    get { return slot_; }
    set {
      slot_ = value;
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 2;
  private global::InventoryType type_ = global::InventoryType.Main;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InventoryType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "item" field.</summary>
  public const int ItemFieldNumber = 3;
  private global::Item item_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Item Item {
    get { return item_; }
    set {
      item_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PlayerSlotUpdate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PlayerSlotUpdate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Slot != other.Slot) return false;
    if (Type != other.Type) return false;
    if (!object.Equals(Item, other.Item)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Slot != 0) hash ^= Slot.GetHashCode();
    if (Type != global::InventoryType.Main) hash ^= Type.GetHashCode();
    if (item_ != null) hash ^= Item.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Slot != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Slot);
    }
    if (Type != global::InventoryType.Main) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Type);
    }
    if (item_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Item);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Slot != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Slot);
    }
    if (Type != global::InventoryType.Main) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Type);
    }
    if (item_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Item);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Slot != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Slot);
    }
    if (Type != global::InventoryType.Main) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (item_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PlayerSlotUpdate other) {
    if (other == null) {
      return;
    }
    if (other.Slot != 0) {
      Slot = other.Slot;
    }
    if (other.Type != global::InventoryType.Main) {
      Type = other.Type;
    }
    if (other.item_ != null) {
      if (item_ == null) {
        Item = new global::Item();
      }
      Item.MergeFrom(other.Item);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Slot = input.ReadInt32();
          break;
        }
        case 16: {
          Type = (global::InventoryType) input.ReadEnum();
          break;
        }
        case 26: {
          if (item_ == null) {
            Item = new global::Item();
          }
          input.ReadMessage(Item);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Slot = input.ReadInt32();
          break;
        }
        case 16: {
          Type = (global::InventoryType) input.ReadEnum();
          break;
        }
        case 26: {
          if (item_ == null) {
            Item = new global::Item();
          }
          input.ReadMessage(Item);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class PlayerApplyImpulse : pb::IMessage<PlayerApplyImpulse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PlayerApplyImpulse> _parser = new pb::MessageParser<PlayerApplyImpulse>(() => new PlayerApplyImpulse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PlayerApplyImpulse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerApplyImpulse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerApplyImpulse(PlayerApplyImpulse other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerApplyImpulse Clone() {
    return new PlayerApplyImpulse(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private float x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private float y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 3;
  private float z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Z {
    get { return z_; }
    set {
      z_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PlayerApplyImpulse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PlayerApplyImpulse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
    if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
    if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (X != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(X);
    }
    if (Y != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Y);
    }
    if (Z != 0F) {
      output.WriteRawTag(29);
      output.WriteFloat(Z);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (X != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(X);
    }
    if (Y != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Y);
    }
    if (Z != 0F) {
      output.WriteRawTag(29);
      output.WriteFloat(Z);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0F) {
      size += 1 + 4;
    }
    if (Y != 0F) {
      size += 1 + 4;
    }
    if (Z != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PlayerApplyImpulse other) {
    if (other == null) {
      return;
    }
    if (other.X != 0F) {
      X = other.X;
    }
    if (other.Y != 0F) {
      Y = other.Y;
    }
    if (other.Z != 0F) {
      Z = other.Z;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          X = input.ReadFloat();
          break;
        }
        case 21: {
          Y = input.ReadFloat();
          break;
        }
        case 29: {
          Z = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          X = input.ReadFloat();
          break;
        }
        case 21: {
          Y = input.ReadFloat();
          break;
        }
        case 29: {
          Z = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class PlayerUpdateMovement : pb::IMessage<PlayerUpdateMovement>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PlayerUpdateMovement> _parser = new pb::MessageParser<PlayerUpdateMovement>(() => new PlayerUpdateMovement());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PlayerUpdateMovement> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerUpdateMovement() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerUpdateMovement(PlayerUpdateMovement other) : this() {
    key_ = other.key_;
    value_ = other.value_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerUpdateMovement Clone() {
    return new PlayerUpdateMovement(this);
  }

  /// <summary>Field number for the "key" field.</summary>
  public const int KeyFieldNumber = 1;
  private string key_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Key {
    get { return key_; }
    set {
      key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 2;
  private double value_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Value {
    get { return value_; }
    set {
      value_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PlayerUpdateMovement);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PlayerUpdateMovement other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Key != other.Key) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Value, other.Value)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Key.Length != 0) hash ^= Key.GetHashCode();
    if (Value != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Value);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Key.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Key);
    }
    if (Value != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Key.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Key);
    }
    if (Value != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Key.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
    }
    if (Value != 0D) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PlayerUpdateMovement other) {
    if (other == null) {
      return;
    }
    if (other.Key.Length != 0) {
      Key = other.Key;
    }
    if (other.Value != 0D) {
      Value = other.Value;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Key = input.ReadString();
          break;
        }
        case 17: {
          Value = input.ReadDouble();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Key = input.ReadString();
          break;
        }
        case 17: {
          Value = input.ReadDouble();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class PlayerUpdatePhysics : pb::IMessage<PlayerUpdatePhysics>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PlayerUpdatePhysics> _parser = new pb::MessageParser<PlayerUpdatePhysics>(() => new PlayerUpdatePhysics());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PlayerUpdatePhysics> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerUpdatePhysics() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerUpdatePhysics(PlayerUpdatePhysics other) : this() {
    key_ = other.key_;
    value_ = other.value_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerUpdatePhysics Clone() {
    return new PlayerUpdatePhysics(this);
  }

  /// <summary>Field number for the "key" field.</summary>
  public const int KeyFieldNumber = 1;
  private string key_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Key {
    get { return key_; }
    set {
      key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 2;
  private double value_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Value {
    get { return value_; }
    set {
      value_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PlayerUpdatePhysics);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PlayerUpdatePhysics other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Key != other.Key) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Value, other.Value)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Key.Length != 0) hash ^= Key.GetHashCode();
    if (Value != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Value);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Key.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Key);
    }
    if (Value != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Key.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Key);
    }
    if (Value != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Key.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
    }
    if (Value != 0D) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PlayerUpdatePhysics other) {
    if (other == null) {
      return;
    }
    if (other.Key.Length != 0) {
      Key = other.Key;
    }
    if (other.Value != 0D) {
      Value = other.Value;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Key = input.ReadString();
          break;
        }
        case 17: {
          Value = input.ReadDouble();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Key = input.ReadString();
          break;
        }
        case 17: {
          Value = input.ReadDouble();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class PlayerHealth : pb::IMessage<PlayerHealth>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PlayerHealth> _parser = new pb::MessageParser<PlayerHealth>(() => new PlayerHealth());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PlayerHealth> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerHealth() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerHealth(PlayerHealth other) : this() {
    value_ = other.value_;
    max_ = other.max_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerHealth Clone() {
    return new PlayerHealth(this);
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 1;
  private float value_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Value {
    get { return value_; }
    set {
      value_ = value;
    }
  }

  /// <summary>Field number for the "max" field.</summary>
  public const int MaxFieldNumber = 2;
  private float max_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Max {
    get { return max_; }
    set {
      max_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PlayerHealth);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PlayerHealth other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Value, other.Value)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Max, other.Max)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Value != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Value);
    if (Max != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Max);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Value != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(Value);
    }
    if (Max != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Max);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Value != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(Value);
    }
    if (Max != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Max);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Value != 0F) {
      size += 1 + 4;
    }
    if (Max != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PlayerHealth other) {
    if (other == null) {
      return;
    }
    if (other.Value != 0F) {
      Value = other.Value;
    }
    if (other.Max != 0F) {
      Max = other.Max;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          Value = input.ReadFloat();
          break;
        }
        case 21: {
          Max = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          Value = input.ReadFloat();
          break;
        }
        case 21: {
          Max = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class PlayerSetBlockReach : pb::IMessage<PlayerSetBlockReach>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PlayerSetBlockReach> _parser = new pb::MessageParser<PlayerSetBlockReach>(() => new PlayerSetBlockReach());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PlayerSetBlockReach> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerSetBlockReach() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerSetBlockReach(PlayerSetBlockReach other) : this() {
    value_ = other.value_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerSetBlockReach Clone() {
    return new PlayerSetBlockReach(this);
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 1;
  private float value_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Value {
    get { return value_; }
    set {
      value_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PlayerSetBlockReach);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PlayerSetBlockReach other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Value, other.Value)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Value != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Value);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Value != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Value != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Value != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PlayerSetBlockReach other) {
    if (other == null) {
      return;
    }
    if (other.Value != 0F) {
      Value = other.Value;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          Value = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          Value = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class PlayerOpenInventory : pb::IMessage<PlayerOpenInventory>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PlayerOpenInventory> _parser = new pb::MessageParser<PlayerOpenInventory>(() => new PlayerOpenInventory());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PlayerOpenInventory> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerOpenInventory() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerOpenInventory(PlayerOpenInventory other) : this() {
    type_ = other.type_;
    name_ = other.name_;
    size_ = other.size_;
    items_ = other.items_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerOpenInventory Clone() {
    return new PlayerOpenInventory(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::ContainerType type_ = global::ContainerType.Player;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ContainerType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 2;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "size" field.</summary>
  public const int SizeFieldNumber = 3;
  private uint size_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Size {
    get { return size_; }
    set {
      size_ = value;
    }
  }

  /// <summary>Field number for the "items" field.</summary>
  public const int ItemsFieldNumber = 4;
  private static readonly pbc::MapField<uint, global::Item>.Codec _map_items_codec
      = new pbc::MapField<uint, global::Item>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForMessage(18, global::Item.Parser), 34);
  private readonly pbc::MapField<uint, global::Item> items_ = new pbc::MapField<uint, global::Item>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::Item> Items {
    get { return items_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PlayerOpenInventory);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PlayerOpenInventory other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (Name != other.Name) return false;
    if (Size != other.Size) return false;
    if (!Items.Equals(other.Items)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != global::ContainerType.Player) hash ^= Type.GetHashCode();
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (Size != 0) hash ^= Size.GetHashCode();
    hash ^= Items.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Type != global::ContainerType.Player) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (Name.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Name);
    }
    if (Size != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(Size);
    }
    items_.WriteTo(output, _map_items_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Type != global::ContainerType.Player) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (Name.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Name);
    }
    if (Size != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(Size);
    }
    items_.WriteTo(ref output, _map_items_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != global::ContainerType.Player) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (Size != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Size);
    }
    size += items_.CalculateSize(_map_items_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PlayerOpenInventory other) {
    if (other == null) {
      return;
    }
    if (other.Type != global::ContainerType.Player) {
      Type = other.Type;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.Size != 0) {
      Size = other.Size;
    }
    items_.Add(other.items_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Type = (global::ContainerType) input.ReadEnum();
          break;
        }
        case 18: {
          Name = input.ReadString();
          break;
        }
        case 24: {
          Size = input.ReadUInt32();
          break;
        }
        case 34: {
          items_.AddEntriesFrom(input, _map_items_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Type = (global::ContainerType) input.ReadEnum();
          break;
        }
        case 18: {
          Name = input.ReadString();
          break;
        }
        case 24: {
          Size = input.ReadUInt32();
          break;
        }
        case 34: {
          items_.AddEntriesFrom(ref input, _map_items_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class PlayerUpdateOpenInventory : pb::IMessage<PlayerUpdateOpenInventory>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PlayerUpdateOpenInventory> _parser = new pb::MessageParser<PlayerUpdateOpenInventory>(() => new PlayerUpdateOpenInventory());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PlayerUpdateOpenInventory> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerUpdateOpenInventory() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerUpdateOpenInventory(PlayerUpdateOpenInventory other) : this() {
    name_ = other.name_;
    items_ = other.items_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerUpdateOpenInventory Clone() {
    return new PlayerUpdateOpenInventory(this);
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 1;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "items" field.</summary>
  public const int ItemsFieldNumber = 2;
  private static readonly pbc::MapField<uint, global::Item>.Codec _map_items_codec
      = new pbc::MapField<uint, global::Item>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForMessage(18, global::Item.Parser), 18);
  private readonly pbc::MapField<uint, global::Item> items_ = new pbc::MapField<uint, global::Item>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::Item> Items {
    get { return items_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PlayerUpdateOpenInventory);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PlayerUpdateOpenInventory other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if (!Items.Equals(other.Items)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    hash ^= Items.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Name.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    items_.WriteTo(output, _map_items_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Name.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    items_.WriteTo(ref output, _map_items_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    size += items_.CalculateSize(_map_items_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PlayerUpdateOpenInventory other) {
    if (other == null) {
      return;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    items_.Add(other.items_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 18: {
          items_.AddEntriesFrom(input, _map_items_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 18: {
          items_.AddEntriesFrom(ref input, _map_items_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class SoundPlay : pb::IMessage<SoundPlay>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<SoundPlay> _parser = new pb::MessageParser<SoundPlay>(() => new SoundPlay());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SoundPlay> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SoundPlay() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SoundPlay(SoundPlay other) : this() {
    sound_ = other.sound_;
    volume_ = other.volume_;
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    type_ = other.type_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SoundPlay Clone() {
    return new SoundPlay(this);
  }

  /// <summary>Field number for the "sound" field.</summary>
  public const int SoundFieldNumber = 1;
  private string sound_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Sound {
    get { return sound_; }
    set {
      sound_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "volume" field.</summary>
  public const int VolumeFieldNumber = 2;
  private uint volume_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Volume {
    get { return volume_; }
    set {
      volume_ = value;
    }
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 3;
  private double x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 4;
  private double y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 5;
  private double z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Z {
    get { return z_; }
    set {
      z_ = value;
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 6;
  private global::SoundPlay.Types.Type type_ = global::SoundPlay.Types.Type.General;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SoundPlay.Types.Type Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SoundPlay);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SoundPlay other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Sound != other.Sound) return false;
    if (Volume != other.Volume) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Z, other.Z)) return false;
    if (Type != other.Type) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Sound.Length != 0) hash ^= Sound.GetHashCode();
    if (Volume != 0) hash ^= Volume.GetHashCode();
    if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
    if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
    if (Z != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Z);
    if (Type != global::SoundPlay.Types.Type.General) hash ^= Type.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Sound.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Sound);
    }
    if (Volume != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Volume);
    }
    if (X != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(X);
    }
    if (Y != 0D) {
      output.WriteRawTag(33);
      output.WriteDouble(Y);
    }
    if (Z != 0D) {
      output.WriteRawTag(41);
      output.WriteDouble(Z);
    }
    if (Type != global::SoundPlay.Types.Type.General) {
      output.WriteRawTag(48);
      output.WriteEnum((int) Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Sound.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Sound);
    }
    if (Volume != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Volume);
    }
    if (X != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(X);
    }
    if (Y != 0D) {
      output.WriteRawTag(33);
      output.WriteDouble(Y);
    }
    if (Z != 0D) {
      output.WriteRawTag(41);
      output.WriteDouble(Z);
    }
    if (Type != global::SoundPlay.Types.Type.General) {
      output.WriteRawTag(48);
      output.WriteEnum((int) Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Sound.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Sound);
    }
    if (Volume != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Volume);
    }
    if (X != 0D) {
      size += 1 + 8;
    }
    if (Y != 0D) {
      size += 1 + 8;
    }
    if (Z != 0D) {
      size += 1 + 8;
    }
    if (Type != global::SoundPlay.Types.Type.General) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SoundPlay other) {
    if (other == null) {
      return;
    }
    if (other.Sound.Length != 0) {
      Sound = other.Sound;
    }
    if (other.Volume != 0) {
      Volume = other.Volume;
    }
    if (other.X != 0D) {
      X = other.X;
    }
    if (other.Y != 0D) {
      Y = other.Y;
    }
    if (other.Z != 0D) {
      Z = other.Z;
    }
    if (other.Type != global::SoundPlay.Types.Type.General) {
      Type = other.Type;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Sound = input.ReadString();
          break;
        }
        case 16: {
          Volume = input.ReadUInt32();
          break;
        }
        case 25: {
          X = input.ReadDouble();
          break;
        }
        case 33: {
          Y = input.ReadDouble();
          break;
        }
        case 41: {
          Z = input.ReadDouble();
          break;
        }
        case 48: {
          Type = (global::SoundPlay.Types.Type) input.ReadEnum();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Sound = input.ReadString();
          break;
        }
        case 16: {
          Volume = input.ReadUInt32();
          break;
        }
        case 25: {
          X = input.ReadDouble();
          break;
        }
        case 33: {
          Y = input.ReadDouble();
          break;
        }
        case 41: {
          Z = input.ReadDouble();
          break;
        }
        case 48: {
          Type = (global::SoundPlay.Types.Type) input.ReadEnum();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the SoundPlay message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Type {
      [pbr::OriginalName("GENERAL")] General = 0,
      [pbr::OriginalName("ENTITY")] Entity = 1,
      [pbr::OriginalName("BLOCK")] Block = 2,
      [pbr::OriginalName("MUSIC")] Music = 3,
      [pbr::OriginalName("SELF")] Self = 4,
    }

  }
  #endregion

}

public sealed partial class ChatMessage : pb::IMessage<ChatMessage>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ChatMessage> _parser = new pb::MessageParser<ChatMessage>(() => new ChatMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ChatMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[19]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChatMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChatMessage(ChatMessage other) : this() {
    message_ = other.message_.Clone();
    time_ = other.time_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChatMessage Clone() {
    return new ChatMessage(this);
  }

  /// <summary>Field number for the "message" field.</summary>
  public const int MessageFieldNumber = 1;
  private static readonly pb::FieldCodec<global::ChatComponentType> _repeated_message_codec
      = pb::FieldCodec.ForMessage(10, global::ChatComponentType.Parser);
  private readonly pbc::RepeatedField<global::ChatComponentType> message_ = new pbc::RepeatedField<global::ChatComponentType>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ChatComponentType> Message {
    get { return message_; }
  }

  /// <summary>Field number for the "time" field.</summary>
  public const int TimeFieldNumber = 2;
  private ulong time_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong Time {
    get { return time_; }
    set {
      time_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ChatMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ChatMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!message_.Equals(other.message_)) return false;
    if (Time != other.Time) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= message_.GetHashCode();
    if (Time != 0UL) hash ^= Time.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    message_.WriteTo(output, _repeated_message_codec);
    if (Time != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(Time);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    message_.WriteTo(ref output, _repeated_message_codec);
    if (Time != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(Time);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += message_.CalculateSize(_repeated_message_codec);
    if (Time != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Time);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ChatMessage other) {
    if (other == null) {
      return;
    }
    message_.Add(other.message_);
    if (other.Time != 0UL) {
      Time = other.Time;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          message_.AddEntriesFrom(input, _repeated_message_codec);
          break;
        }
        case 16: {
          Time = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          message_.AddEntriesFrom(ref input, _repeated_message_codec);
          break;
        }
        case 16: {
          Time = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class UpdateTextBoard : pb::IMessage<UpdateTextBoard>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<UpdateTextBoard> _parser = new pb::MessageParser<UpdateTextBoard>(() => new UpdateTextBoard());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateTextBoard> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[20]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateTextBoard() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateTextBoard(UpdateTextBoard other) : this() {
    type_ = other.type_;
    message_ = other.message_.Clone();
    time_ = other.time_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateTextBoard Clone() {
    return new UpdateTextBoard(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::UpdateTextBoard.Types.Type type_ = global::UpdateTextBoard.Types.Type.Tab;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateTextBoard.Types.Type Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "message" field.</summary>
  public const int MessageFieldNumber = 2;
  private static readonly pb::FieldCodec<global::BasicChatComponentType> _repeated_message_codec
      = pb::FieldCodec.ForMessage(18, global::BasicChatComponentType.Parser);
  private readonly pbc::RepeatedField<global::BasicChatComponentType> message_ = new pbc::RepeatedField<global::BasicChatComponentType>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::BasicChatComponentType> Message {
    get { return message_; }
  }

  /// <summary>Field number for the "time" field.</summary>
  public const int TimeFieldNumber = 3;
  private ulong time_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong Time {
    get { return time_; }
    set {
      time_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateTextBoard);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateTextBoard other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if(!message_.Equals(other.message_)) return false;
    if (Time != other.Time) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != global::UpdateTextBoard.Types.Type.Tab) hash ^= Type.GetHashCode();
    hash ^= message_.GetHashCode();
    if (Time != 0UL) hash ^= Time.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Type != global::UpdateTextBoard.Types.Type.Tab) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    message_.WriteTo(output, _repeated_message_codec);
    if (Time != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(Time);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Type != global::UpdateTextBoard.Types.Type.Tab) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    message_.WriteTo(ref output, _repeated_message_codec);
    if (Time != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(Time);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != global::UpdateTextBoard.Types.Type.Tab) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    size += message_.CalculateSize(_repeated_message_codec);
    if (Time != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Time);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateTextBoard other) {
    if (other == null) {
      return;
    }
    if (other.Type != global::UpdateTextBoard.Types.Type.Tab) {
      Type = other.Type;
    }
    message_.Add(other.message_);
    if (other.Time != 0UL) {
      Time = other.Time;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Type = (global::UpdateTextBoard.Types.Type) input.ReadEnum();
          break;
        }
        case 18: {
          message_.AddEntriesFrom(input, _repeated_message_codec);
          break;
        }
        case 24: {
          Time = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Type = (global::UpdateTextBoard.Types.Type) input.ReadEnum();
          break;
        }
        case 18: {
          message_.AddEntriesFrom(ref input, _repeated_message_codec);
          break;
        }
        case 24: {
          Time = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the UpdateTextBoard message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Type {
      [pbr::OriginalName("TAB")] Tab = 0,
      [pbr::OriginalName("SIDE")] Side = 1,
      [pbr::OriginalName("CENTER")] Center = 2,
      [pbr::OriginalName("HOTBAR")] Hotbar = 3,
    }

  }
  #endregion

}

public sealed partial class EntityCreate : pb::IMessage<EntityCreate>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<EntityCreate> _parser = new pb::MessageParser<EntityCreate>(() => new EntityCreate());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EntityCreate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[21]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityCreate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityCreate(EntityCreate other) : this() {
    uuid_ = other.uuid_;
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    rotation_ = other.rotation_;
    pitch_ = other.pitch_;
    model_ = other.model_;
    texture_ = other.texture_;
    name_ = other.name_.Clone();
    hitbox_ = other.hitbox_.Clone();
    heldItem_ = other.heldItem_;
    armor_ = other.armor_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityCreate Clone() {
    return new EntityCreate(this);
  }

  /// <summary>Field number for the "uuid" field.</summary>
  public const int UuidFieldNumber = 1;
  private string uuid_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Uuid {
    get { return uuid_; }
    set {
      uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 2;
  private double x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 3;
  private double y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 4;
  private double z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Z {
    get { return z_; }
    set {
      z_ = value;
    }
  }

  /// <summary>Field number for the "rotation" field.</summary>
  public const int RotationFieldNumber = 5;
  private float rotation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Rotation {
    get { return rotation_; }
    set {
      rotation_ = value;
    }
  }

  /// <summary>Field number for the "pitch" field.</summary>
  public const int PitchFieldNumber = 6;
  private float pitch_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Pitch {
    get { return pitch_; }
    set {
      pitch_ = value;
    }
  }

  /// <summary>Field number for the "model" field.</summary>
  public const int ModelFieldNumber = 7;
  private string model_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Model {
    get { return model_; }
    set {
      model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "texture" field.</summary>
  public const int TextureFieldNumber = 8;
  private string texture_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Texture {
    get { return texture_; }
    set {
      texture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 9;
  private static readonly pb::FieldCodec<global::BasicChatComponentType> _repeated_name_codec
      = pb::FieldCodec.ForMessage(74, global::BasicChatComponentType.Parser);
  private readonly pbc::RepeatedField<global::BasicChatComponentType> name_ = new pbc::RepeatedField<global::BasicChatComponentType>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::BasicChatComponentType> Name {
    get { return name_; }
  }

  /// <summary>Field number for the "hitbox" field.</summary>
  public const int HitboxFieldNumber = 10;
  private static readonly pb::FieldCodec<float> _repeated_hitbox_codec
      = pb::FieldCodec.ForFloat(82);
  private readonly pbc::RepeatedField<float> hitbox_ = new pbc::RepeatedField<float>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<float> Hitbox {
    get { return hitbox_; }
  }

  /// <summary>Field number for the "held_item" field.</summary>
  public const int HeldItemFieldNumber = 11;
  private string heldItem_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HeldItem {
    get { return heldItem_; }
    set {
      heldItem_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "armor" field.</summary>
  public const int ArmorFieldNumber = 12;
  private static readonly pbc::MapField<uint, string>.Codec _map_armor_codec
      = new pbc::MapField<uint, string>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForString(18, ""), 98);
  private readonly pbc::MapField<uint, string> armor_ = new pbc::MapField<uint, string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, string> Armor {
    get { return armor_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EntityCreate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EntityCreate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Uuid != other.Uuid) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Z, other.Z)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rotation, other.Rotation)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Pitch, other.Pitch)) return false;
    if (Model != other.Model) return false;
    if (Texture != other.Texture) return false;
    if(!name_.Equals(other.name_)) return false;
    if(!hitbox_.Equals(other.hitbox_)) return false;
    if (HeldItem != other.HeldItem) return false;
    if (!Armor.Equals(other.Armor)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
    if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
    if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
    if (Z != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Z);
    if (Rotation != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rotation);
    if (Pitch != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Pitch);
    if (Model.Length != 0) hash ^= Model.GetHashCode();
    if (Texture.Length != 0) hash ^= Texture.GetHashCode();
    hash ^= name_.GetHashCode();
    hash ^= hitbox_.GetHashCode();
    if (HeldItem.Length != 0) hash ^= HeldItem.GetHashCode();
    hash ^= Armor.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Uuid.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Uuid);
    }
    if (X != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(X);
    }
    if (Y != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(Y);
    }
    if (Z != 0D) {
      output.WriteRawTag(33);
      output.WriteDouble(Z);
    }
    if (Rotation != 0F) {
      output.WriteRawTag(45);
      output.WriteFloat(Rotation);
    }
    if (Pitch != 0F) {
      output.WriteRawTag(53);
      output.WriteFloat(Pitch);
    }
    if (Model.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(Model);
    }
    if (Texture.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(Texture);
    }
    name_.WriteTo(output, _repeated_name_codec);
    hitbox_.WriteTo(output, _repeated_hitbox_codec);
    if (HeldItem.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(HeldItem);
    }
    armor_.WriteTo(output, _map_armor_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Uuid.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Uuid);
    }
    if (X != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(X);
    }
    if (Y != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(Y);
    }
    if (Z != 0D) {
      output.WriteRawTag(33);
      output.WriteDouble(Z);
    }
    if (Rotation != 0F) {
      output.WriteRawTag(45);
      output.WriteFloat(Rotation);
    }
    if (Pitch != 0F) {
      output.WriteRawTag(53);
      output.WriteFloat(Pitch);
    }
    if (Model.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(Model);
    }
    if (Texture.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(Texture);
    }
    name_.WriteTo(ref output, _repeated_name_codec);
    hitbox_.WriteTo(ref output, _repeated_hitbox_codec);
    if (HeldItem.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(HeldItem);
    }
    armor_.WriteTo(ref output, _map_armor_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Uuid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
    }
    if (X != 0D) {
      size += 1 + 8;
    }
    if (Y != 0D) {
      size += 1 + 8;
    }
    if (Z != 0D) {
      size += 1 + 8;
    }
    if (Rotation != 0F) {
      size += 1 + 4;
    }
    if (Pitch != 0F) {
      size += 1 + 4;
    }
    if (Model.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
    }
    if (Texture.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Texture);
    }
    size += name_.CalculateSize(_repeated_name_codec);
    size += hitbox_.CalculateSize(_repeated_hitbox_codec);
    if (HeldItem.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HeldItem);
    }
    size += armor_.CalculateSize(_map_armor_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EntityCreate other) {
    if (other == null) {
      return;
    }
    if (other.Uuid.Length != 0) {
      Uuid = other.Uuid;
    }
    if (other.X != 0D) {
      X = other.X;
    }
    if (other.Y != 0D) {
      Y = other.Y;
    }
    if (other.Z != 0D) {
      Z = other.Z;
    }
    if (other.Rotation != 0F) {
      Rotation = other.Rotation;
    }
    if (other.Pitch != 0F) {
      Pitch = other.Pitch;
    }
    if (other.Model.Length != 0) {
      Model = other.Model;
    }
    if (other.Texture.Length != 0) {
      Texture = other.Texture;
    }
    name_.Add(other.name_);
    hitbox_.Add(other.hitbox_);
    if (other.HeldItem.Length != 0) {
      HeldItem = other.HeldItem;
    }
    armor_.Add(other.armor_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Uuid = input.ReadString();
          break;
        }
        case 17: {
          X = input.ReadDouble();
          break;
        }
        case 25: {
          Y = input.ReadDouble();
          break;
        }
        case 33: {
          Z = input.ReadDouble();
          break;
        }
        case 45: {
          Rotation = input.ReadFloat();
          break;
        }
        case 53: {
          Pitch = input.ReadFloat();
          break;
        }
        case 58: {
          Model = input.ReadString();
          break;
        }
        case 66: {
          Texture = input.ReadString();
          break;
        }
        case 74: {
          name_.AddEntriesFrom(input, _repeated_name_codec);
          break;
        }
        case 82:
        case 85: {
          hitbox_.AddEntriesFrom(input, _repeated_hitbox_codec);
          break;
        }
        case 90: {
          HeldItem = input.ReadString();
          break;
        }
        case 98: {
          armor_.AddEntriesFrom(input, _map_armor_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Uuid = input.ReadString();
          break;
        }
        case 17: {
          X = input.ReadDouble();
          break;
        }
        case 25: {
          Y = input.ReadDouble();
          break;
        }
        case 33: {
          Z = input.ReadDouble();
          break;
        }
        case 45: {
          Rotation = input.ReadFloat();
          break;
        }
        case 53: {
          Pitch = input.ReadFloat();
          break;
        }
        case 58: {
          Model = input.ReadString();
          break;
        }
        case 66: {
          Texture = input.ReadString();
          break;
        }
        case 74: {
          name_.AddEntriesFrom(ref input, _repeated_name_codec);
          break;
        }
        case 82:
        case 85: {
          hitbox_.AddEntriesFrom(ref input, _repeated_hitbox_codec);
          break;
        }
        case 90: {
          HeldItem = input.ReadString();
          break;
        }
        case 98: {
          armor_.AddEntriesFrom(ref input, _map_armor_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class EntityRemove : pb::IMessage<EntityRemove>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<EntityRemove> _parser = new pb::MessageParser<EntityRemove>(() => new EntityRemove());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EntityRemove> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[22]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityRemove() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityRemove(EntityRemove other) : this() {
    uuid_ = other.uuid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityRemove Clone() {
    return new EntityRemove(this);
  }

  /// <summary>Field number for the "uuid" field.</summary>
  public const int UuidFieldNumber = 1;
  private string uuid_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Uuid {
    get { return uuid_; }
    set {
      uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EntityRemove);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EntityRemove other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Uuid != other.Uuid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Uuid.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Uuid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Uuid.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Uuid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Uuid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EntityRemove other) {
    if (other == null) {
      return;
    }
    if (other.Uuid.Length != 0) {
      Uuid = other.Uuid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Uuid = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Uuid = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class EntityMove : pb::IMessage<EntityMove>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<EntityMove> _parser = new pb::MessageParser<EntityMove>(() => new EntityMove());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EntityMove> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[23]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityMove() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityMove(EntityMove other) : this() {
    uuid_ = other.uuid_;
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    rotation_ = other.rotation_;
    pitch_ = other.pitch_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityMove Clone() {
    return new EntityMove(this);
  }

  /// <summary>Field number for the "uuid" field.</summary>
  public const int UuidFieldNumber = 1;
  private string uuid_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Uuid {
    get { return uuid_; }
    set {
      uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 2;
  private double x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 3;
  private double y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 4;
  private double z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Z {
    get { return z_; }
    set {
      z_ = value;
    }
  }

  /// <summary>Field number for the "rotation" field.</summary>
  public const int RotationFieldNumber = 5;
  private float rotation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Rotation {
    get { return rotation_; }
    set {
      rotation_ = value;
    }
  }

  /// <summary>Field number for the "pitch" field.</summary>
  public const int PitchFieldNumber = 6;
  private float pitch_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Pitch {
    get { return pitch_; }
    set {
      pitch_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EntityMove);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EntityMove other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Uuid != other.Uuid) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Z, other.Z)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rotation, other.Rotation)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Pitch, other.Pitch)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
    if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
    if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
    if (Z != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Z);
    if (Rotation != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rotation);
    if (Pitch != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Pitch);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Uuid.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Uuid);
    }
    if (X != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(X);
    }
    if (Y != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(Y);
    }
    if (Z != 0D) {
      output.WriteRawTag(33);
      output.WriteDouble(Z);
    }
    if (Rotation != 0F) {
      output.WriteRawTag(45);
      output.WriteFloat(Rotation);
    }
    if (Pitch != 0F) {
      output.WriteRawTag(53);
      output.WriteFloat(Pitch);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Uuid.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Uuid);
    }
    if (X != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(X);
    }
    if (Y != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(Y);
    }
    if (Z != 0D) {
      output.WriteRawTag(33);
      output.WriteDouble(Z);
    }
    if (Rotation != 0F) {
      output.WriteRawTag(45);
      output.WriteFloat(Rotation);
    }
    if (Pitch != 0F) {
      output.WriteRawTag(53);
      output.WriteFloat(Pitch);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Uuid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
    }
    if (X != 0D) {
      size += 1 + 8;
    }
    if (Y != 0D) {
      size += 1 + 8;
    }
    if (Z != 0D) {
      size += 1 + 8;
    }
    if (Rotation != 0F) {
      size += 1 + 4;
    }
    if (Pitch != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EntityMove other) {
    if (other == null) {
      return;
    }
    if (other.Uuid.Length != 0) {
      Uuid = other.Uuid;
    }
    if (other.X != 0D) {
      X = other.X;
    }
    if (other.Y != 0D) {
      Y = other.Y;
    }
    if (other.Z != 0D) {
      Z = other.Z;
    }
    if (other.Rotation != 0F) {
      Rotation = other.Rotation;
    }
    if (other.Pitch != 0F) {
      Pitch = other.Pitch;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Uuid = input.ReadString();
          break;
        }
        case 17: {
          X = input.ReadDouble();
          break;
        }
        case 25: {
          Y = input.ReadDouble();
          break;
        }
        case 33: {
          Z = input.ReadDouble();
          break;
        }
        case 45: {
          Rotation = input.ReadFloat();
          break;
        }
        case 53: {
          Pitch = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Uuid = input.ReadString();
          break;
        }
        case 17: {
          X = input.ReadDouble();
          break;
        }
        case 25: {
          Y = input.ReadDouble();
          break;
        }
        case 33: {
          Z = input.ReadDouble();
          break;
        }
        case 45: {
          Rotation = input.ReadFloat();
          break;
        }
        case 53: {
          Pitch = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class EntityNameUpdate : pb::IMessage<EntityNameUpdate>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<EntityNameUpdate> _parser = new pb::MessageParser<EntityNameUpdate>(() => new EntityNameUpdate());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EntityNameUpdate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[24]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityNameUpdate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityNameUpdate(EntityNameUpdate other) : this() {
    uuid_ = other.uuid_;
    name_ = other.name_;
    visible_ = other.visible_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityNameUpdate Clone() {
    return new EntityNameUpdate(this);
  }

  /// <summary>Field number for the "uuid" field.</summary>
  public const int UuidFieldNumber = 1;
  private string uuid_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Uuid {
    get { return uuid_; }
    set {
      uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 2;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "visible" field.</summary>
  public const int VisibleFieldNumber = 3;
  private bool visible_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Visible {
    get { return visible_; }
    set {
      visible_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EntityNameUpdate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EntityNameUpdate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Uuid != other.Uuid) return false;
    if (Name != other.Name) return false;
    if (Visible != other.Visible) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (Visible != false) hash ^= Visible.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Uuid.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Uuid);
    }
    if (Name.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Name);
    }
    if (Visible != false) {
      output.WriteRawTag(24);
      output.WriteBool(Visible);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Uuid.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Uuid);
    }
    if (Name.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Name);
    }
    if (Visible != false) {
      output.WriteRawTag(24);
      output.WriteBool(Visible);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Uuid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
    }
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (Visible != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EntityNameUpdate other) {
    if (other == null) {
      return;
    }
    if (other.Uuid.Length != 0) {
      Uuid = other.Uuid;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.Visible != false) {
      Visible = other.Visible;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Uuid = input.ReadString();
          break;
        }
        case 18: {
          Name = input.ReadString();
          break;
        }
        case 24: {
          Visible = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Uuid = input.ReadString();
          break;
        }
        case 18: {
          Name = input.ReadString();
          break;
        }
        case 24: {
          Visible = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class EntityHeldItem : pb::IMessage<EntityHeldItem>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<EntityHeldItem> _parser = new pb::MessageParser<EntityHeldItem>(() => new EntityHeldItem());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EntityHeldItem> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[25]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityHeldItem() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityHeldItem(EntityHeldItem other) : this() {
    uuid_ = other.uuid_;
    id_ = other.id_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityHeldItem Clone() {
    return new EntityHeldItem(this);
  }

  /// <summary>Field number for the "uuid" field.</summary>
  public const int UuidFieldNumber = 1;
  private string uuid_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Uuid {
    get { return uuid_; }
    set {
      uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 2;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EntityHeldItem);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EntityHeldItem other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Uuid != other.Uuid) return false;
    if (Id != other.Id) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Uuid.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Uuid);
    }
    if (Id.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Id);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Uuid.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Uuid);
    }
    if (Id.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Id);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Uuid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
    }
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EntityHeldItem other) {
    if (other == null) {
      return;
    }
    if (other.Uuid.Length != 0) {
      Uuid = other.Uuid;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Uuid = input.ReadString();
          break;
        }
        case 18: {
          Id = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Uuid = input.ReadString();
          break;
        }
        case 18: {
          Id = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class EntityArmor : pb::IMessage<EntityArmor>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<EntityArmor> _parser = new pb::MessageParser<EntityArmor>(() => new EntityArmor());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EntityArmor> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[26]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityArmor() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityArmor(EntityArmor other) : this() {
    uuid_ = other.uuid_;
    type_ = other.type_;
    id_ = other.id_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityArmor Clone() {
    return new EntityArmor(this);
  }

  /// <summary>Field number for the "uuid" field.</summary>
  public const int UuidFieldNumber = 1;
  private string uuid_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Uuid {
    get { return uuid_; }
    set {
      uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 2;
  private int type_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 3;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EntityArmor);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EntityArmor other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Uuid != other.Uuid) return false;
    if (Type != other.Type) return false;
    if (Id != other.Id) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
    if (Type != 0) hash ^= Type.GetHashCode();
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Uuid.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Uuid);
    }
    if (Type != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Type);
    }
    if (Id.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Id);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Uuid.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Uuid);
    }
    if (Type != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Type);
    }
    if (Id.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Id);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Uuid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
    }
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
    }
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EntityArmor other) {
    if (other == null) {
      return;
    }
    if (other.Uuid.Length != 0) {
      Uuid = other.Uuid;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Uuid = input.ReadString();
          break;
        }
        case 16: {
          Type = input.ReadInt32();
          break;
        }
        case 26: {
          Id = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Uuid = input.ReadString();
          break;
        }
        case 16: {
          Type = input.ReadInt32();
          break;
        }
        case 26: {
          Id = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class EntityAnimate : pb::IMessage<EntityAnimate>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<EntityAnimate> _parser = new pb::MessageParser<EntityAnimate>(() => new EntityAnimate());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EntityAnimate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[27]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityAnimate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityAnimate(EntityAnimate other) : this() {
    uuid_ = other.uuid_;
    animation_ = other.animation_;
    time_ = other.time_;
    replace_ = other.replace_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityAnimate Clone() {
    return new EntityAnimate(this);
  }

  /// <summary>Field number for the "uuid" field.</summary>
  public const int UuidFieldNumber = 1;
  private string uuid_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Uuid {
    get { return uuid_; }
    set {
      uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "animation" field.</summary>
  public const int AnimationFieldNumber = 2;
  private string animation_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Animation {
    get { return animation_; }
    set {
      animation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "time" field.</summary>
  public const int TimeFieldNumber = 3;
  private uint time_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Time {
    get { return time_; }
    set {
      time_ = value;
    }
  }

  /// <summary>Field number for the "replace" field.</summary>
  public const int ReplaceFieldNumber = 4;
  private bool replace_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Replace {
    get { return replace_; }
    set {
      replace_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EntityAnimate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EntityAnimate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Uuid != other.Uuid) return false;
    if (Animation != other.Animation) return false;
    if (Time != other.Time) return false;
    if (Replace != other.Replace) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
    if (Animation.Length != 0) hash ^= Animation.GetHashCode();
    if (Time != 0) hash ^= Time.GetHashCode();
    if (Replace != false) hash ^= Replace.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Uuid.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Uuid);
    }
    if (Animation.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Animation);
    }
    if (Time != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(Time);
    }
    if (Replace != false) {
      output.WriteRawTag(32);
      output.WriteBool(Replace);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Uuid.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Uuid);
    }
    if (Animation.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Animation);
    }
    if (Time != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(Time);
    }
    if (Replace != false) {
      output.WriteRawTag(32);
      output.WriteBool(Replace);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Uuid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
    }
    if (Animation.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Animation);
    }
    if (Time != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Time);
    }
    if (Replace != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EntityAnimate other) {
    if (other == null) {
      return;
    }
    if (other.Uuid.Length != 0) {
      Uuid = other.Uuid;
    }
    if (other.Animation.Length != 0) {
      Animation = other.Animation;
    }
    if (other.Time != 0) {
      Time = other.Time;
    }
    if (other.Replace != false) {
      Replace = other.Replace;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Uuid = input.ReadString();
          break;
        }
        case 18: {
          Animation = input.ReadString();
          break;
        }
        case 24: {
          Time = input.ReadUInt32();
          break;
        }
        case 32: {
          Replace = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Uuid = input.ReadString();
          break;
        }
        case 18: {
          Animation = input.ReadString();
          break;
        }
        case 24: {
          Time = input.ReadUInt32();
          break;
        }
        case 32: {
          Replace = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class WorldBlockUpdate : pb::IMessage<WorldBlockUpdate>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<WorldBlockUpdate> _parser = new pb::MessageParser<WorldBlockUpdate>(() => new WorldBlockUpdate());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<WorldBlockUpdate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[28]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WorldBlockUpdate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WorldBlockUpdate(WorldBlockUpdate other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    id_ = other.id_;
    particles_ = other.particles_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WorldBlockUpdate Clone() {
    return new WorldBlockUpdate(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private int x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private int y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 3;
  private int z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Z {
    get { return z_; }
    set {
      z_ = value;
    }
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 4;
  private uint id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "particles" field.</summary>
  public const int ParticlesFieldNumber = 5;
  private bool particles_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Particles {
    get { return particles_; }
    set {
      particles_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as WorldBlockUpdate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(WorldBlockUpdate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (X != other.X) return false;
    if (Y != other.Y) return false;
    if (Z != other.Z) return false;
    if (Id != other.Id) return false;
    if (Particles != other.Particles) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0) hash ^= X.GetHashCode();
    if (Y != 0) hash ^= Y.GetHashCode();
    if (Z != 0) hash ^= Z.GetHashCode();
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Particles != false) hash ^= Particles.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (X != 0) {
      output.WriteRawTag(8);
      output.WriteSInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(16);
      output.WriteSInt32(Y);
    }
    if (Z != 0) {
      output.WriteRawTag(24);
      output.WriteSInt32(Z);
    }
    if (Id != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(Id);
    }
    if (Particles != false) {
      output.WriteRawTag(40);
      output.WriteBool(Particles);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (X != 0) {
      output.WriteRawTag(8);
      output.WriteSInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(16);
      output.WriteSInt32(Y);
    }
    if (Z != 0) {
      output.WriteRawTag(24);
      output.WriteSInt32(Z);
    }
    if (Id != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(Id);
    }
    if (Particles != false) {
      output.WriteRawTag(40);
      output.WriteBool(Particles);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(X);
    }
    if (Y != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Y);
    }
    if (Z != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Z);
    }
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
    }
    if (Particles != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(WorldBlockUpdate other) {
    if (other == null) {
      return;
    }
    if (other.X != 0) {
      X = other.X;
    }
    if (other.Y != 0) {
      Y = other.Y;
    }
    if (other.Z != 0) {
      Z = other.Z;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Particles != false) {
      Particles = other.Particles;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          X = input.ReadSInt32();
          break;
        }
        case 16: {
          Y = input.ReadSInt32();
          break;
        }
        case 24: {
          Z = input.ReadSInt32();
          break;
        }
        case 32: {
          Id = input.ReadUInt32();
          break;
        }
        case 40: {
          Particles = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          X = input.ReadSInt32();
          break;
        }
        case 16: {
          Y = input.ReadSInt32();
          break;
        }
        case 24: {
          Z = input.ReadSInt32();
          break;
        }
        case 32: {
          Id = input.ReadUInt32();
          break;
        }
        case 40: {
          Particles = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class WorldMultiBlockUpdate : pb::IMessage<WorldMultiBlockUpdate>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<WorldMultiBlockUpdate> _parser = new pb::MessageParser<WorldMultiBlockUpdate>(() => new WorldMultiBlockUpdate());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<WorldMultiBlockUpdate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[29]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WorldMultiBlockUpdate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WorldMultiBlockUpdate(WorldMultiBlockUpdate other) : this() {
    blocks_ = other.blocks_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WorldMultiBlockUpdate Clone() {
    return new WorldMultiBlockUpdate(this);
  }

  /// <summary>Field number for the "blocks" field.</summary>
  public const int BlocksFieldNumber = 1;
  private static readonly pb::FieldCodec<global::WorldBlockUpdate> _repeated_blocks_codec
      = pb::FieldCodec.ForMessage(10, global::WorldBlockUpdate.Parser);
  private readonly pbc::RepeatedField<global::WorldBlockUpdate> blocks_ = new pbc::RepeatedField<global::WorldBlockUpdate>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::WorldBlockUpdate> Blocks {
    get { return blocks_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as WorldMultiBlockUpdate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(WorldMultiBlockUpdate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!blocks_.Equals(other.blocks_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= blocks_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    blocks_.WriteTo(output, _repeated_blocks_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    blocks_.WriteTo(ref output, _repeated_blocks_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += blocks_.CalculateSize(_repeated_blocks_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(WorldMultiBlockUpdate other) {
    if (other == null) {
      return;
    }
    blocks_.Add(other.blocks_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          blocks_.AddEntriesFrom(input, _repeated_blocks_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          blocks_.AddEntriesFrom(ref input, _repeated_blocks_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class WorldChunkLoad : pb::IMessage<WorldChunkLoad>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<WorldChunkLoad> _parser = new pb::MessageParser<WorldChunkLoad>(() => new WorldChunkLoad());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<WorldChunkLoad> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[30]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WorldChunkLoad() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WorldChunkLoad(WorldChunkLoad other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    height_ = other.height_;
    compressed_ = other.compressed_;
    blockData_ = other.blockData_;
    lightData_ = other.lightData_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WorldChunkLoad Clone() {
    return new WorldChunkLoad(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private int x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private int y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 3;
  private int z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Z {
    get { return z_; }
    set {
      z_ = value;
    }
  }

  /// <summary>Field number for the "height" field.</summary>
  public const int HeightFieldNumber = 4;
  private int height_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Height {
    get { return height_; }
    set {
      height_ = value;
    }
  }

  /// <summary>Field number for the "compressed" field.</summary>
  public const int CompressedFieldNumber = 5;
  private bool compressed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Compressed {
    get { return compressed_; }
    set {
      compressed_ = value;
    }
  }

  /// <summary>Field number for the "block_data" field.</summary>
  public const int BlockDataFieldNumber = 6;
  private pb::ByteString blockData_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString BlockData {
    get { return blockData_; }
    set {
      blockData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "light_data" field.</summary>
  public const int LightDataFieldNumber = 7;
  private pb::ByteString lightData_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString LightData {
    get { return lightData_; }
    set {
      lightData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as WorldChunkLoad);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(WorldChunkLoad other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (X != other.X) return false;
    if (Y != other.Y) return false;
    if (Z != other.Z) return false;
    if (Height != other.Height) return false;
    if (Compressed != other.Compressed) return false;
    if (BlockData != other.BlockData) return false;
    if (LightData != other.LightData) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0) hash ^= X.GetHashCode();
    if (Y != 0) hash ^= Y.GetHashCode();
    if (Z != 0) hash ^= Z.GetHashCode();
    if (Height != 0) hash ^= Height.GetHashCode();
    if (Compressed != false) hash ^= Compressed.GetHashCode();
    if (BlockData.Length != 0) hash ^= BlockData.GetHashCode();
    if (LightData.Length != 0) hash ^= LightData.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (X != 0) {
      output.WriteRawTag(8);
      output.WriteSInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(16);
      output.WriteSInt32(Y);
    }
    if (Z != 0) {
      output.WriteRawTag(24);
      output.WriteSInt32(Z);
    }
    if (Height != 0) {
      output.WriteRawTag(32);
      output.WriteSInt32(Height);
    }
    if (Compressed != false) {
      output.WriteRawTag(40);
      output.WriteBool(Compressed);
    }
    if (BlockData.Length != 0) {
      output.WriteRawTag(50);
      output.WriteBytes(BlockData);
    }
    if (LightData.Length != 0) {
      output.WriteRawTag(58);
      output.WriteBytes(LightData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (X != 0) {
      output.WriteRawTag(8);
      output.WriteSInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(16);
      output.WriteSInt32(Y);
    }
    if (Z != 0) {
      output.WriteRawTag(24);
      output.WriteSInt32(Z);
    }
    if (Height != 0) {
      output.WriteRawTag(32);
      output.WriteSInt32(Height);
    }
    if (Compressed != false) {
      output.WriteRawTag(40);
      output.WriteBool(Compressed);
    }
    if (BlockData.Length != 0) {
      output.WriteRawTag(50);
      output.WriteBytes(BlockData);
    }
    if (LightData.Length != 0) {
      output.WriteRawTag(58);
      output.WriteBytes(LightData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(X);
    }
    if (Y != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Y);
    }
    if (Z != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Z);
    }
    if (Height != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Height);
    }
    if (Compressed != false) {
      size += 1 + 1;
    }
    if (BlockData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(BlockData);
    }
    if (LightData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(LightData);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(WorldChunkLoad other) {
    if (other == null) {
      return;
    }
    if (other.X != 0) {
      X = other.X;
    }
    if (other.Y != 0) {
      Y = other.Y;
    }
    if (other.Z != 0) {
      Z = other.Z;
    }
    if (other.Height != 0) {
      Height = other.Height;
    }
    if (other.Compressed != false) {
      Compressed = other.Compressed;
    }
    if (other.BlockData.Length != 0) {
      BlockData = other.BlockData;
    }
    if (other.LightData.Length != 0) {
      LightData = other.LightData;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          X = input.ReadSInt32();
          break;
        }
        case 16: {
          Y = input.ReadSInt32();
          break;
        }
        case 24: {
          Z = input.ReadSInt32();
          break;
        }
        case 32: {
          Height = input.ReadSInt32();
          break;
        }
        case 40: {
          Compressed = input.ReadBool();
          break;
        }
        case 50: {
          BlockData = input.ReadBytes();
          break;
        }
        case 58: {
          LightData = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          X = input.ReadSInt32();
          break;
        }
        case 16: {
          Y = input.ReadSInt32();
          break;
        }
        case 24: {
          Z = input.ReadSInt32();
          break;
        }
        case 32: {
          Height = input.ReadSInt32();
          break;
        }
        case 40: {
          Compressed = input.ReadBool();
          break;
        }
        case 50: {
          BlockData = input.ReadBytes();
          break;
        }
        case 58: {
          LightData = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class WorldChunkUnload : pb::IMessage<WorldChunkUnload>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<WorldChunkUnload> _parser = new pb::MessageParser<WorldChunkUnload>(() => new WorldChunkUnload());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<WorldChunkUnload> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[31]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WorldChunkUnload() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WorldChunkUnload(WorldChunkUnload other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    height_ = other.height_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WorldChunkUnload Clone() {
    return new WorldChunkUnload(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private int x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private int y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 3;
  private int z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Z {
    get { return z_; }
    set {
      z_ = value;
    }
  }

  /// <summary>Field number for the "height" field.</summary>
  public const int HeightFieldNumber = 4;
  private int height_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Height {
    get { return height_; }
    set {
      height_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as WorldChunkUnload);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(WorldChunkUnload other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (X != other.X) return false;
    if (Y != other.Y) return false;
    if (Z != other.Z) return false;
    if (Height != other.Height) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0) hash ^= X.GetHashCode();
    if (Y != 0) hash ^= Y.GetHashCode();
    if (Z != 0) hash ^= Z.GetHashCode();
    if (Height != 0) hash ^= Height.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (X != 0) {
      output.WriteRawTag(8);
      output.WriteSInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(16);
      output.WriteSInt32(Y);
    }
    if (Z != 0) {
      output.WriteRawTag(24);
      output.WriteSInt32(Z);
    }
    if (Height != 0) {
      output.WriteRawTag(32);
      output.WriteSInt32(Height);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (X != 0) {
      output.WriteRawTag(8);
      output.WriteSInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(16);
      output.WriteSInt32(Y);
    }
    if (Z != 0) {
      output.WriteRawTag(24);
      output.WriteSInt32(Z);
    }
    if (Height != 0) {
      output.WriteRawTag(32);
      output.WriteSInt32(Height);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(X);
    }
    if (Y != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Y);
    }
    if (Z != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Z);
    }
    if (Height != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Height);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(WorldChunkUnload other) {
    if (other == null) {
      return;
    }
    if (other.X != 0) {
      X = other.X;
    }
    if (other.Y != 0) {
      Y = other.Y;
    }
    if (other.Z != 0) {
      Z = other.Z;
    }
    if (other.Height != 0) {
      Height = other.Height;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          X = input.ReadSInt32();
          break;
        }
        case 16: {
          Y = input.ReadSInt32();
          break;
        }
        case 24: {
          Z = input.ReadSInt32();
          break;
        }
        case 32: {
          Height = input.ReadSInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          X = input.ReadSInt32();
          break;
        }
        case 16: {
          Y = input.ReadSInt32();
          break;
        }
        case 24: {
          Z = input.ReadSInt32();
          break;
        }
        case 32: {
          Height = input.ReadSInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class WorldChunkIsLoaded : pb::IMessage<WorldChunkIsLoaded>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<WorldChunkIsLoaded> _parser = new pb::MessageParser<WorldChunkIsLoaded>(() => new WorldChunkIsLoaded());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<WorldChunkIsLoaded> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[32]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WorldChunkIsLoaded() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WorldChunkIsLoaded(WorldChunkIsLoaded other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WorldChunkIsLoaded Clone() {
    return new WorldChunkIsLoaded(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private int x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private int y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 3;
  private int z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Z {
    get { return z_; }
    set {
      z_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as WorldChunkIsLoaded);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(WorldChunkIsLoaded other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (X != other.X) return false;
    if (Y != other.Y) return false;
    if (Z != other.Z) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0) hash ^= X.GetHashCode();
    if (Y != 0) hash ^= Y.GetHashCode();
    if (Z != 0) hash ^= Z.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (X != 0) {
      output.WriteRawTag(8);
      output.WriteSInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(16);
      output.WriteSInt32(Y);
    }
    if (Z != 0) {
      output.WriteRawTag(24);
      output.WriteSInt32(Z);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (X != 0) {
      output.WriteRawTag(8);
      output.WriteSInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(16);
      output.WriteSInt32(Y);
    }
    if (Z != 0) {
      output.WriteRawTag(24);
      output.WriteSInt32(Z);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(X);
    }
    if (Y != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Y);
    }
    if (Z != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Z);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(WorldChunkIsLoaded other) {
    if (other == null) {
      return;
    }
    if (other.X != 0) {
      X = other.X;
    }
    if (other.Y != 0) {
      Y = other.Y;
    }
    if (other.Z != 0) {
      Z = other.Z;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          X = input.ReadSInt32();
          break;
        }
        case 16: {
          Y = input.ReadSInt32();
          break;
        }
        case 24: {
          Z = input.ReadSInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          X = input.ReadSInt32();
          break;
        }
        case 16: {
          Y = input.ReadSInt32();
          break;
        }
        case 24: {
          Z = input.ReadSInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class WorldChunksRemoveAll : pb::IMessage<WorldChunksRemoveAll>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<WorldChunksRemoveAll> _parser = new pb::MessageParser<WorldChunksRemoveAll>(() => new WorldChunksRemoveAll());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<WorldChunksRemoveAll> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[33]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WorldChunksRemoveAll() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WorldChunksRemoveAll(WorldChunksRemoveAll other) : this() {
    confirm_ = other.confirm_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WorldChunksRemoveAll Clone() {
    return new WorldChunksRemoveAll(this);
  }

  /// <summary>Field number for the "confirm" field.</summary>
  public const int ConfirmFieldNumber = 1;
  private bool confirm_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Confirm {
    get { return confirm_; }
    set {
      confirm_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as WorldChunksRemoveAll);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(WorldChunksRemoveAll other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Confirm != other.Confirm) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Confirm != false) hash ^= Confirm.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Confirm != false) {
      output.WriteRawTag(8);
      output.WriteBool(Confirm);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Confirm != false) {
      output.WriteRawTag(8);
      output.WriteBool(Confirm);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Confirm != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(WorldChunksRemoveAll other) {
    if (other == null) {
      return;
    }
    if (other.Confirm != false) {
      Confirm = other.Confirm;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Confirm = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Confirm = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class EnvironmentTimeUpdate : pb::IMessage<EnvironmentTimeUpdate>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<EnvironmentTimeUpdate> _parser = new pb::MessageParser<EnvironmentTimeUpdate>(() => new EnvironmentTimeUpdate());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EnvironmentTimeUpdate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[34]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EnvironmentTimeUpdate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EnvironmentTimeUpdate(EnvironmentTimeUpdate other) : this() {
    value_ = other.value_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EnvironmentTimeUpdate Clone() {
    return new EnvironmentTimeUpdate(this);
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 1;
  private int value_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Value {
    get { return value_; }
    set {
      value_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EnvironmentTimeUpdate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EnvironmentTimeUpdate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Value != other.Value) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Value != 0) hash ^= Value.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Value != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Value != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Value != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EnvironmentTimeUpdate other) {
    if (other == null) {
      return;
    }
    if (other.Value != 0) {
      Value = other.Value;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Value = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Value = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class EnvironmentFogUpdate : pb::IMessage<EnvironmentFogUpdate>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<EnvironmentFogUpdate> _parser = new pb::MessageParser<EnvironmentFogUpdate>(() => new EnvironmentFogUpdate());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EnvironmentFogUpdate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[35]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EnvironmentFogUpdate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EnvironmentFogUpdate(EnvironmentFogUpdate other) : this() {
    mode_ = other.mode_;
    density_ = other.density_;
    start_ = other.start_;
    end_ = other.end_;
    colorRed_ = other.colorRed_;
    colorGreen_ = other.colorGreen_;
    colorBlue_ = other.colorBlue_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EnvironmentFogUpdate Clone() {
    return new EnvironmentFogUpdate(this);
  }

  /// <summary>Field number for the "mode" field.</summary>
  public const int ModeFieldNumber = 1;
  private uint mode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Mode {
    get { return mode_; }
    set {
      mode_ = value;
    }
  }

  /// <summary>Field number for the "density" field.</summary>
  public const int DensityFieldNumber = 2;
  private float density_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Density {
    get { return density_; }
    set {
      density_ = value;
    }
  }

  /// <summary>Field number for the "start" field.</summary>
  public const int StartFieldNumber = 3;
  private float start_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Start {
    get { return start_; }
    set {
      start_ = value;
    }
  }

  /// <summary>Field number for the "end" field.</summary>
  public const int EndFieldNumber = 4;
  private float end_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float End {
    get { return end_; }
    set {
      end_ = value;
    }
  }

  /// <summary>Field number for the "color_red" field.</summary>
  public const int ColorRedFieldNumber = 5;
  private float colorRed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float ColorRed {
    get { return colorRed_; }
    set {
      colorRed_ = value;
    }
  }

  /// <summary>Field number for the "color_green" field.</summary>
  public const int ColorGreenFieldNumber = 6;
  private float colorGreen_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float ColorGreen {
    get { return colorGreen_; }
    set {
      colorGreen_ = value;
    }
  }

  /// <summary>Field number for the "color_blue" field.</summary>
  public const int ColorBlueFieldNumber = 7;
  private float colorBlue_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float ColorBlue {
    get { return colorBlue_; }
    set {
      colorBlue_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EnvironmentFogUpdate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EnvironmentFogUpdate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Mode != other.Mode) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Density, other.Density)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Start, other.Start)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(End, other.End)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ColorRed, other.ColorRed)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ColorGreen, other.ColorGreen)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ColorBlue, other.ColorBlue)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Mode != 0) hash ^= Mode.GetHashCode();
    if (Density != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Density);
    if (Start != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Start);
    if (End != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(End);
    if (ColorRed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ColorRed);
    if (ColorGreen != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ColorGreen);
    if (ColorBlue != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ColorBlue);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Mode != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(Mode);
    }
    if (Density != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Density);
    }
    if (Start != 0F) {
      output.WriteRawTag(29);
      output.WriteFloat(Start);
    }
    if (End != 0F) {
      output.WriteRawTag(37);
      output.WriteFloat(End);
    }
    if (ColorRed != 0F) {
      output.WriteRawTag(45);
      output.WriteFloat(ColorRed);
    }
    if (ColorGreen != 0F) {
      output.WriteRawTag(53);
      output.WriteFloat(ColorGreen);
    }
    if (ColorBlue != 0F) {
      output.WriteRawTag(61);
      output.WriteFloat(ColorBlue);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Mode != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(Mode);
    }
    if (Density != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Density);
    }
    if (Start != 0F) {
      output.WriteRawTag(29);
      output.WriteFloat(Start);
    }
    if (End != 0F) {
      output.WriteRawTag(37);
      output.WriteFloat(End);
    }
    if (ColorRed != 0F) {
      output.WriteRawTag(45);
      output.WriteFloat(ColorRed);
    }
    if (ColorGreen != 0F) {
      output.WriteRawTag(53);
      output.WriteFloat(ColorGreen);
    }
    if (ColorBlue != 0F) {
      output.WriteRawTag(61);
      output.WriteFloat(ColorBlue);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Mode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mode);
    }
    if (Density != 0F) {
      size += 1 + 4;
    }
    if (Start != 0F) {
      size += 1 + 4;
    }
    if (End != 0F) {
      size += 1 + 4;
    }
    if (ColorRed != 0F) {
      size += 1 + 4;
    }
    if (ColorGreen != 0F) {
      size += 1 + 4;
    }
    if (ColorBlue != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EnvironmentFogUpdate other) {
    if (other == null) {
      return;
    }
    if (other.Mode != 0) {
      Mode = other.Mode;
    }
    if (other.Density != 0F) {
      Density = other.Density;
    }
    if (other.Start != 0F) {
      Start = other.Start;
    }
    if (other.End != 0F) {
      End = other.End;
    }
    if (other.ColorRed != 0F) {
      ColorRed = other.ColorRed;
    }
    if (other.ColorGreen != 0F) {
      ColorGreen = other.ColorGreen;
    }
    if (other.ColorBlue != 0F) {
      ColorBlue = other.ColorBlue;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Mode = input.ReadUInt32();
          break;
        }
        case 21: {
          Density = input.ReadFloat();
          break;
        }
        case 29: {
          Start = input.ReadFloat();
          break;
        }
        case 37: {
          End = input.ReadFloat();
          break;
        }
        case 45: {
          ColorRed = input.ReadFloat();
          break;
        }
        case 53: {
          ColorGreen = input.ReadFloat();
          break;
        }
        case 61: {
          ColorBlue = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Mode = input.ReadUInt32();
          break;
        }
        case 21: {
          Density = input.ReadFloat();
          break;
        }
        case 29: {
          Start = input.ReadFloat();
          break;
        }
        case 37: {
          End = input.ReadFloat();
          break;
        }
        case 45: {
          ColorRed = input.ReadFloat();
          break;
        }
        case 53: {
          ColorGreen = input.ReadFloat();
          break;
        }
        case 61: {
          ColorBlue = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class EnvironmentSkyUpdate : pb::IMessage<EnvironmentSkyUpdate>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<EnvironmentSkyUpdate> _parser = new pb::MessageParser<EnvironmentSkyUpdate>(() => new EnvironmentSkyUpdate());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EnvironmentSkyUpdate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[36]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EnvironmentSkyUpdate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EnvironmentSkyUpdate(EnvironmentSkyUpdate other) : this() {
    clouds_ = other.clouds_;
    colorRed_ = other.colorRed_;
    colorGreen_ = other.colorGreen_;
    colorBlue_ = other.colorBlue_;
    colorRedTop_ = other.colorRedTop_;
    colorGreenTop_ = other.colorGreenTop_;
    colorBlueTop_ = other.colorBlueTop_;
    colorRedBottom_ = other.colorRedBottom_;
    colorGreenBottom_ = other.colorGreenBottom_;
    colorBlueBottom_ = other.colorBlueBottom_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EnvironmentSkyUpdate Clone() {
    return new EnvironmentSkyUpdate(this);
  }

  /// <summary>Field number for the "clouds" field.</summary>
  public const int CloudsFieldNumber = 1;
  private bool clouds_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Clouds {
    get { return clouds_; }
    set {
      clouds_ = value;
    }
  }

  /// <summary>Field number for the "color_red" field.</summary>
  public const int ColorRedFieldNumber = 2;
  private float colorRed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float ColorRed {
    get { return colorRed_; }
    set {
      colorRed_ = value;
    }
  }

  /// <summary>Field number for the "color_green" field.</summary>
  public const int ColorGreenFieldNumber = 3;
  private float colorGreen_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float ColorGreen {
    get { return colorGreen_; }
    set {
      colorGreen_ = value;
    }
  }

  /// <summary>Field number for the "color_blue" field.</summary>
  public const int ColorBlueFieldNumber = 4;
  private float colorBlue_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float ColorBlue {
    get { return colorBlue_; }
    set {
      colorBlue_ = value;
    }
  }

  /// <summary>Field number for the "color_red_top" field.</summary>
  public const int ColorRedTopFieldNumber = 5;
  private float colorRedTop_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float ColorRedTop {
    get { return colorRedTop_; }
    set {
      colorRedTop_ = value;
    }
  }

  /// <summary>Field number for the "color_green_top" field.</summary>
  public const int ColorGreenTopFieldNumber = 6;
  private float colorGreenTop_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float ColorGreenTop {
    get { return colorGreenTop_; }
    set {
      colorGreenTop_ = value;
    }
  }

  /// <summary>Field number for the "color_blue_top" field.</summary>
  public const int ColorBlueTopFieldNumber = 7;
  private float colorBlueTop_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float ColorBlueTop {
    get { return colorBlueTop_; }
    set {
      colorBlueTop_ = value;
    }
  }

  /// <summary>Field number for the "color_red_bottom" field.</summary>
  public const int ColorRedBottomFieldNumber = 8;
  private float colorRedBottom_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float ColorRedBottom {
    get { return colorRedBottom_; }
    set {
      colorRedBottom_ = value;
    }
  }

  /// <summary>Field number for the "color_green_bottom" field.</summary>
  public const int ColorGreenBottomFieldNumber = 9;
  private float colorGreenBottom_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float ColorGreenBottom {
    get { return colorGreenBottom_; }
    set {
      colorGreenBottom_ = value;
    }
  }

  /// <summary>Field number for the "color_blue_bottom" field.</summary>
  public const int ColorBlueBottomFieldNumber = 10;
  private float colorBlueBottom_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float ColorBlueBottom {
    get { return colorBlueBottom_; }
    set {
      colorBlueBottom_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EnvironmentSkyUpdate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EnvironmentSkyUpdate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Clouds != other.Clouds) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ColorRed, other.ColorRed)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ColorGreen, other.ColorGreen)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ColorBlue, other.ColorBlue)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ColorRedTop, other.ColorRedTop)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ColorGreenTop, other.ColorGreenTop)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ColorBlueTop, other.ColorBlueTop)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ColorRedBottom, other.ColorRedBottom)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ColorGreenBottom, other.ColorGreenBottom)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ColorBlueBottom, other.ColorBlueBottom)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Clouds != false) hash ^= Clouds.GetHashCode();
    if (ColorRed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ColorRed);
    if (ColorGreen != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ColorGreen);
    if (ColorBlue != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ColorBlue);
    if (ColorRedTop != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ColorRedTop);
    if (ColorGreenTop != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ColorGreenTop);
    if (ColorBlueTop != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ColorBlueTop);
    if (ColorRedBottom != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ColorRedBottom);
    if (ColorGreenBottom != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ColorGreenBottom);
    if (ColorBlueBottom != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ColorBlueBottom);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Clouds != false) {
      output.WriteRawTag(8);
      output.WriteBool(Clouds);
    }
    if (ColorRed != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(ColorRed);
    }
    if (ColorGreen != 0F) {
      output.WriteRawTag(29);
      output.WriteFloat(ColorGreen);
    }
    if (ColorBlue != 0F) {
      output.WriteRawTag(37);
      output.WriteFloat(ColorBlue);
    }
    if (ColorRedTop != 0F) {
      output.WriteRawTag(45);
      output.WriteFloat(ColorRedTop);
    }
    if (ColorGreenTop != 0F) {
      output.WriteRawTag(53);
      output.WriteFloat(ColorGreenTop);
    }
    if (ColorBlueTop != 0F) {
      output.WriteRawTag(61);
      output.WriteFloat(ColorBlueTop);
    }
    if (ColorRedBottom != 0F) {
      output.WriteRawTag(69);
      output.WriteFloat(ColorRedBottom);
    }
    if (ColorGreenBottom != 0F) {
      output.WriteRawTag(77);
      output.WriteFloat(ColorGreenBottom);
    }
    if (ColorBlueBottom != 0F) {
      output.WriteRawTag(85);
      output.WriteFloat(ColorBlueBottom);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Clouds != false) {
      output.WriteRawTag(8);
      output.WriteBool(Clouds);
    }
    if (ColorRed != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(ColorRed);
    }
    if (ColorGreen != 0F) {
      output.WriteRawTag(29);
      output.WriteFloat(ColorGreen);
    }
    if (ColorBlue != 0F) {
      output.WriteRawTag(37);
      output.WriteFloat(ColorBlue);
    }
    if (ColorRedTop != 0F) {
      output.WriteRawTag(45);
      output.WriteFloat(ColorRedTop);
    }
    if (ColorGreenTop != 0F) {
      output.WriteRawTag(53);
      output.WriteFloat(ColorGreenTop);
    }
    if (ColorBlueTop != 0F) {
      output.WriteRawTag(61);
      output.WriteFloat(ColorBlueTop);
    }
    if (ColorRedBottom != 0F) {
      output.WriteRawTag(69);
      output.WriteFloat(ColorRedBottom);
    }
    if (ColorGreenBottom != 0F) {
      output.WriteRawTag(77);
      output.WriteFloat(ColorGreenBottom);
    }
    if (ColorBlueBottom != 0F) {
      output.WriteRawTag(85);
      output.WriteFloat(ColorBlueBottom);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Clouds != false) {
      size += 1 + 1;
    }
    if (ColorRed != 0F) {
      size += 1 + 4;
    }
    if (ColorGreen != 0F) {
      size += 1 + 4;
    }
    if (ColorBlue != 0F) {
      size += 1 + 4;
    }
    if (ColorRedTop != 0F) {
      size += 1 + 4;
    }
    if (ColorGreenTop != 0F) {
      size += 1 + 4;
    }
    if (ColorBlueTop != 0F) {
      size += 1 + 4;
    }
    if (ColorRedBottom != 0F) {
      size += 1 + 4;
    }
    if (ColorGreenBottom != 0F) {
      size += 1 + 4;
    }
    if (ColorBlueBottom != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EnvironmentSkyUpdate other) {
    if (other == null) {
      return;
    }
    if (other.Clouds != false) {
      Clouds = other.Clouds;
    }
    if (other.ColorRed != 0F) {
      ColorRed = other.ColorRed;
    }
    if (other.ColorGreen != 0F) {
      ColorGreen = other.ColorGreen;
    }
    if (other.ColorBlue != 0F) {
      ColorBlue = other.ColorBlue;
    }
    if (other.ColorRedTop != 0F) {
      ColorRedTop = other.ColorRedTop;
    }
    if (other.ColorGreenTop != 0F) {
      ColorGreenTop = other.ColorGreenTop;
    }
    if (other.ColorBlueTop != 0F) {
      ColorBlueTop = other.ColorBlueTop;
    }
    if (other.ColorRedBottom != 0F) {
      ColorRedBottom = other.ColorRedBottom;
    }
    if (other.ColorGreenBottom != 0F) {
      ColorGreenBottom = other.ColorGreenBottom;
    }
    if (other.ColorBlueBottom != 0F) {
      ColorBlueBottom = other.ColorBlueBottom;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Clouds = input.ReadBool();
          break;
        }
        case 21: {
          ColorRed = input.ReadFloat();
          break;
        }
        case 29: {
          ColorGreen = input.ReadFloat();
          break;
        }
        case 37: {
          ColorBlue = input.ReadFloat();
          break;
        }
        case 45: {
          ColorRedTop = input.ReadFloat();
          break;
        }
        case 53: {
          ColorGreenTop = input.ReadFloat();
          break;
        }
        case 61: {
          ColorBlueTop = input.ReadFloat();
          break;
        }
        case 69: {
          ColorRedBottom = input.ReadFloat();
          break;
        }
        case 77: {
          ColorGreenBottom = input.ReadFloat();
          break;
        }
        case 85: {
          ColorBlueBottom = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Clouds = input.ReadBool();
          break;
        }
        case 21: {
          ColorRed = input.ReadFloat();
          break;
        }
        case 29: {
          ColorGreen = input.ReadFloat();
          break;
        }
        case 37: {
          ColorBlue = input.ReadFloat();
          break;
        }
        case 45: {
          ColorRedTop = input.ReadFloat();
          break;
        }
        case 53: {
          ColorGreenTop = input.ReadFloat();
          break;
        }
        case 61: {
          ColorBlueTop = input.ReadFloat();
          break;
        }
        case 69: {
          ColorRedBottom = input.ReadFloat();
          break;
        }
        case 77: {
          ColorGreenBottom = input.ReadFloat();
          break;
        }
        case 85: {
          ColorBlueBottom = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class EnvironmentSetSkybox : pb::IMessage<EnvironmentSetSkybox>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<EnvironmentSetSkybox> _parser = new pb::MessageParser<EnvironmentSetSkybox>(() => new EnvironmentSetSkybox());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EnvironmentSetSkybox> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[37]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EnvironmentSetSkybox() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EnvironmentSetSkybox(EnvironmentSetSkybox other) : this() {
    enable_ = other.enable_;
    texture_ = other.texture_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EnvironmentSetSkybox Clone() {
    return new EnvironmentSetSkybox(this);
  }

  /// <summary>Field number for the "enable" field.</summary>
  public const int EnableFieldNumber = 1;
  private bool enable_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Enable {
    get { return enable_; }
    set {
      enable_ = value;
    }
  }

  /// <summary>Field number for the "texture" field.</summary>
  public const int TextureFieldNumber = 2;
  private string texture_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Texture {
    get { return texture_; }
    set {
      texture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EnvironmentSetSkybox);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EnvironmentSetSkybox other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Enable != other.Enable) return false;
    if (Texture != other.Texture) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Enable != false) hash ^= Enable.GetHashCode();
    if (Texture.Length != 0) hash ^= Texture.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Enable != false) {
      output.WriteRawTag(8);
      output.WriteBool(Enable);
    }
    if (Texture.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Texture);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Enable != false) {
      output.WriteRawTag(8);
      output.WriteBool(Enable);
    }
    if (Texture.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Texture);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Enable != false) {
      size += 1 + 1;
    }
    if (Texture.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Texture);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EnvironmentSetSkybox other) {
    if (other == null) {
      return;
    }
    if (other.Enable != false) {
      Enable = other.Enable;
    }
    if (other.Texture.Length != 0) {
      Texture = other.Texture;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Enable = input.ReadBool();
          break;
        }
        case 18: {
          Texture = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Enable = input.ReadBool();
          break;
        }
        case 18: {
          Texture = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class PluginMessage : pb::IMessage<PluginMessage>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PluginMessage> _parser = new pb::MessageParser<PluginMessage>(() => new PluginMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PluginMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerReflection.Descriptor.MessageTypes[38]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PluginMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PluginMessage(PluginMessage other) : this() {
    key_ = other.key_;
    version_ = other.version_;
    value_ = other.value_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PluginMessage Clone() {
    return new PluginMessage(this);
  }

  /// <summary>Field number for the "key" field.</summary>
  public const int KeyFieldNumber = 1;
  private string key_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Key {
    get { return key_; }
    set {
      key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "version" field.</summary>
  public const int VersionFieldNumber = 2;
  private uint version_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Version {
    get { return version_; }
    set {
      version_ = value;
    }
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 3;
  private pb::ByteString value_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Value {
    get { return value_; }
    set {
      value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PluginMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PluginMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Key != other.Key) return false;
    if (Version != other.Version) return false;
    if (Value != other.Value) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Key.Length != 0) hash ^= Key.GetHashCode();
    if (Version != 0) hash ^= Version.GetHashCode();
    if (Value.Length != 0) hash ^= Value.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Key.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Key);
    }
    if (Version != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Version);
    }
    if (Value.Length != 0) {
      output.WriteRawTag(26);
      output.WriteBytes(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Key.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Key);
    }
    if (Version != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Version);
    }
    if (Value.Length != 0) {
      output.WriteRawTag(26);
      output.WriteBytes(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Key.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
    }
    if (Version != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
    }
    if (Value.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PluginMessage other) {
    if (other == null) {
      return;
    }
    if (other.Key.Length != 0) {
      Key = other.Key;
    }
    if (other.Version != 0) {
      Version = other.Version;
    }
    if (other.Value.Length != 0) {
      Value = other.Value;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Key = input.ReadString();
          break;
        }
        case 16: {
          Version = input.ReadUInt32();
          break;
        }
        case 26: {
          Value = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Key = input.ReadString();
          break;
        }
        case 16: {
          Version = input.ReadUInt32();
          break;
        }
        case 26: {
          Value = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
