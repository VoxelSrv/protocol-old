// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/client.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from proto/client.proto</summary>
public static partial class ClientReflection {

  #region Descriptor
  /// <summary>File descriptor for proto/client.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ClientReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChJwcm90by9jbGllbnQucHJvdG8aEXByb3RvL3R5cGVzLnByb3RvIocBCg1M",
          "b2dpblJlc3BvbnNlEhAKCHVzZXJuYW1lGAEgASgJEhAKCHByb3RvY29sGAIg",
          "ASgNEg4KBm1vYmlsZRgDIAEoCBIOCgZjbGllbnQYBCABKAkSDAoEdXVpZBgF",
          "IAEoCRIOCgZzZWNyZXQYBiABKAkSFAoMcHJvdG9jb2xfcmV2GAcgASgFIhQK",
          "BFBpbmcSDAoEdGltZRgBIAEoBCItCgpBY3Rpb25Nb3ZlEgkKAXgYASABKAES",
          "CQoBeRgCIAEoARIJCgF6GAMgASgBIi0KCkFjdGlvbkxvb2sSEAoIcm90YXRp",
          "b24YASABKAISDQoFcGl0Y2gYAiABKAIiUgoOQWN0aW9uTW92ZUxvb2sSCQoB",
          "eBgBIAEoARIJCgF5GAIgASgBEgkKAXoYAyABKAESEAoIcm90YXRpb24YBCAB",
          "KAISDQoFcGl0Y2gYBSABKAIiIAoNQWN0aW9uTWVzc2FnZRIPCgdtZXNzYWdl",
          "GAEgASgJIlcKEEFjdGlvbkJsb2NrUGxhY2USCQoBeBgBIAEoERIJCgF5GAIg",
          "ASgREgkKAXoYAyABKBESCgoCeDIYBCABKBESCgoCeTIYBSABKBESCgoCejIY",
          "BiABKBEiQwoQQWN0aW9uQmxvY2tCcmVhaxIJCgF4GAEgASgREgkKAXkYAiAB",
          "KBESCQoBehgDIAEoERIOCgZzdGF0dXMYBCABKAIiZgoUQWN0aW9uSW52ZW50",
          "b3J5Q2xpY2sSDAoEc2xvdBgBIAEoBRIdCgR0eXBlGAIgASgOMg8uTW91c2VD",
          "bGlja1R5cGUSIQoJaW52ZW50b3J5GAMgASgOMg4uSW52ZW50b3J5VHlwZSJB",
          "ChNBY3Rpb25JbnZlbnRvcnlQaWNrEgwKBHNsb3QYASABKAUSDQoFc2xvdDIY",
          "AiABKAUSDQoFYmxvY2sYAyABKBEiOAoTQWN0aW9uSW52ZW50b3J5T3BlbhIh",
          "CglpbnZlbnRvcnkYASABKA4yDi5Db250YWluZXJUeXBlIjkKFEFjdGlvbklu",
          "dmVudG9yeUNsb3NlEiEKCWludmVudG9yeRgBIAEoDjIOLkNvbnRhaW5lclR5",
          "cGUiXwoLQWN0aW9uQ2xpY2sSCQoBeBgBIAEoERIJCgF5GAIgASgREgkKAXoY",
          "AyABKBESHQoEdHlwZRgEIAEoDjIPLk1vdXNlQ2xpY2tUeXBlEhAKCG9uX2Js",
          "b2NrGAUgASgIIkEKEUFjdGlvbkNsaWNrRW50aXR5EgwKBHV1aWQYASABKAkS",
          "DAoEdHlwZRgCIAEoCRIQCghkaXN0YW5jZRgDIAEoAiIrCg5BY3Rpb25LZXlQ",
          "cmVzcxILCgNrZXkYASABKAkSDAoEdHlwZRgCIAEoCCJNChpXb3JsZENodW5r",
          "SXNMb2FkZWRSZXNwb25jZRIJCgF4GAEgASgREgkKAXkYAiABKBESCQoBehgD",
          "IAEoERIOCgZsb2FkZWQYBCABKAgiPAoNUGx1Z2luTWVzc2FnZRILCgNrZXkY",
          "ASABKAkSDwoHdmVyc2lvbhgCIAEoDRINCgV2YWx1ZRgDIAEoDGIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::TypesReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::LoginResponse), global::LoginResponse.Parser, new[]{ "Username", "Protocol", "Mobile", "Client", "Uuid", "Secret", "ProtocolRev" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Ping), global::Ping.Parser, new[]{ "Time" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ActionMove), global::ActionMove.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ActionLook), global::ActionLook.Parser, new[]{ "Rotation", "Pitch" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ActionMoveLook), global::ActionMoveLook.Parser, new[]{ "X", "Y", "Z", "Rotation", "Pitch" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ActionMessage), global::ActionMessage.Parser, new[]{ "Message" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ActionBlockPlace), global::ActionBlockPlace.Parser, new[]{ "X", "Y", "Z", "X2", "Y2", "Z2" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ActionBlockBreak), global::ActionBlockBreak.Parser, new[]{ "X", "Y", "Z", "Status" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ActionInventoryClick), global::ActionInventoryClick.Parser, new[]{ "Slot", "Type", "Inventory" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ActionInventoryPick), global::ActionInventoryPick.Parser, new[]{ "Slot", "Slot2", "Block" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ActionInventoryOpen), global::ActionInventoryOpen.Parser, new[]{ "Inventory" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ActionInventoryClose), global::ActionInventoryClose.Parser, new[]{ "Inventory" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ActionClick), global::ActionClick.Parser, new[]{ "X", "Y", "Z", "Type", "OnBlock" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ActionClickEntity), global::ActionClickEntity.Parser, new[]{ "Uuid", "Type", "Distance" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ActionKeyPress), global::ActionKeyPress.Parser, new[]{ "Key", "Type" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::WorldChunkIsLoadedResponce), global::WorldChunkIsLoadedResponce.Parser, new[]{ "X", "Y", "Z", "Loaded" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PluginMessage), global::PluginMessage.Parser, new[]{ "Key", "Version", "Value" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class LoginResponse : pb::IMessage<LoginResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<LoginResponse> _parser = new pb::MessageParser<LoginResponse>(() => new LoginResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LoginResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginResponse(LoginResponse other) : this() {
    username_ = other.username_;
    protocol_ = other.protocol_;
    mobile_ = other.mobile_;
    client_ = other.client_;
    uuid_ = other.uuid_;
    secret_ = other.secret_;
    protocolRev_ = other.protocolRev_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginResponse Clone() {
    return new LoginResponse(this);
  }

  /// <summary>Field number for the "username" field.</summary>
  public const int UsernameFieldNumber = 1;
  private string username_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Username {
    get { return username_; }
    set {
      username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "protocol" field.</summary>
  public const int ProtocolFieldNumber = 2;
  private uint protocol_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Protocol {
    get { return protocol_; }
    set {
      protocol_ = value;
    }
  }

  /// <summary>Field number for the "mobile" field.</summary>
  public const int MobileFieldNumber = 3;
  private bool mobile_;
  /// <summary>
  /// Is set to true, if player is using mobile device
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Mobile {
    get { return mobile_; }
    set {
      mobile_ = value;
    }
  }

  /// <summary>Field number for the "client" field.</summary>
  public const int ClientFieldNumber = 4;
  private string client_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Client {
    get { return client_; }
    set {
      client_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "uuid" field.</summary>
  public const int UuidFieldNumber = 5;
  private string uuid_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Uuid {
    get { return uuid_; }
    set {
      uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "secret" field.</summary>
  public const int SecretFieldNumber = 6;
  private string secret_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Secret {
    get { return secret_; }
    set {
      secret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "protocol_rev" field.</summary>
  public const int ProtocolRevFieldNumber = 7;
  private int protocolRev_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ProtocolRev {
    get { return protocolRev_; }
    set {
      protocolRev_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LoginResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LoginResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Username != other.Username) return false;
    if (Protocol != other.Protocol) return false;
    if (Mobile != other.Mobile) return false;
    if (Client != other.Client) return false;
    if (Uuid != other.Uuid) return false;
    if (Secret != other.Secret) return false;
    if (ProtocolRev != other.ProtocolRev) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Username.Length != 0) hash ^= Username.GetHashCode();
    if (Protocol != 0) hash ^= Protocol.GetHashCode();
    if (Mobile != false) hash ^= Mobile.GetHashCode();
    if (Client.Length != 0) hash ^= Client.GetHashCode();
    if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
    if (Secret.Length != 0) hash ^= Secret.GetHashCode();
    if (ProtocolRev != 0) hash ^= ProtocolRev.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Username.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Username);
    }
    if (Protocol != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Protocol);
    }
    if (Mobile != false) {
      output.WriteRawTag(24);
      output.WriteBool(Mobile);
    }
    if (Client.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Client);
    }
    if (Uuid.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Uuid);
    }
    if (Secret.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(Secret);
    }
    if (ProtocolRev != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(ProtocolRev);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Username.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Username);
    }
    if (Protocol != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Protocol);
    }
    if (Mobile != false) {
      output.WriteRawTag(24);
      output.WriteBool(Mobile);
    }
    if (Client.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Client);
    }
    if (Uuid.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Uuid);
    }
    if (Secret.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(Secret);
    }
    if (ProtocolRev != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(ProtocolRev);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Username.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
    }
    if (Protocol != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Protocol);
    }
    if (Mobile != false) {
      size += 1 + 1;
    }
    if (Client.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Client);
    }
    if (Uuid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
    }
    if (Secret.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Secret);
    }
    if (ProtocolRev != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProtocolRev);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LoginResponse other) {
    if (other == null) {
      return;
    }
    if (other.Username.Length != 0) {
      Username = other.Username;
    }
    if (other.Protocol != 0) {
      Protocol = other.Protocol;
    }
    if (other.Mobile != false) {
      Mobile = other.Mobile;
    }
    if (other.Client.Length != 0) {
      Client = other.Client;
    }
    if (other.Uuid.Length != 0) {
      Uuid = other.Uuid;
    }
    if (other.Secret.Length != 0) {
      Secret = other.Secret;
    }
    if (other.ProtocolRev != 0) {
      ProtocolRev = other.ProtocolRev;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Username = input.ReadString();
          break;
        }
        case 16: {
          Protocol = input.ReadUInt32();
          break;
        }
        case 24: {
          Mobile = input.ReadBool();
          break;
        }
        case 34: {
          Client = input.ReadString();
          break;
        }
        case 42: {
          Uuid = input.ReadString();
          break;
        }
        case 50: {
          Secret = input.ReadString();
          break;
        }
        case 56: {
          ProtocolRev = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Username = input.ReadString();
          break;
        }
        case 16: {
          Protocol = input.ReadUInt32();
          break;
        }
        case 24: {
          Mobile = input.ReadBool();
          break;
        }
        case 34: {
          Client = input.ReadString();
          break;
        }
        case 42: {
          Uuid = input.ReadString();
          break;
        }
        case 50: {
          Secret = input.ReadString();
          break;
        }
        case 56: {
          ProtocolRev = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class Ping : pb::IMessage<Ping>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Ping> _parser = new pb::MessageParser<Ping>(() => new Ping());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Ping> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Ping() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Ping(Ping other) : this() {
    time_ = other.time_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Ping Clone() {
    return new Ping(this);
  }

  /// <summary>Field number for the "time" field.</summary>
  public const int TimeFieldNumber = 1;
  private ulong time_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong Time {
    get { return time_; }
    set {
      time_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Ping);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Ping other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Time != other.Time) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Time != 0UL) hash ^= Time.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Time != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(Time);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Time != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(Time);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Time != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Time);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Ping other) {
    if (other == null) {
      return;
    }
    if (other.Time != 0UL) {
      Time = other.Time;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Time = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Time = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ActionMove : pb::IMessage<ActionMove>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ActionMove> _parser = new pb::MessageParser<ActionMove>(() => new ActionMove());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ActionMove> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionMove() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionMove(ActionMove other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionMove Clone() {
    return new ActionMove(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private double x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private double y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 3;
  private double z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Z {
    get { return z_; }
    set {
      z_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ActionMove);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ActionMove other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Z, other.Z)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
    if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
    if (Z != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Z);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (X != 0D) {
      output.WriteRawTag(9);
      output.WriteDouble(X);
    }
    if (Y != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(Y);
    }
    if (Z != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(Z);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (X != 0D) {
      output.WriteRawTag(9);
      output.WriteDouble(X);
    }
    if (Y != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(Y);
    }
    if (Z != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(Z);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0D) {
      size += 1 + 8;
    }
    if (Y != 0D) {
      size += 1 + 8;
    }
    if (Z != 0D) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ActionMove other) {
    if (other == null) {
      return;
    }
    if (other.X != 0D) {
      X = other.X;
    }
    if (other.Y != 0D) {
      Y = other.Y;
    }
    if (other.Z != 0D) {
      Z = other.Z;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          X = input.ReadDouble();
          break;
        }
        case 17: {
          Y = input.ReadDouble();
          break;
        }
        case 25: {
          Z = input.ReadDouble();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          X = input.ReadDouble();
          break;
        }
        case 17: {
          Y = input.ReadDouble();
          break;
        }
        case 25: {
          Z = input.ReadDouble();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ActionLook : pb::IMessage<ActionLook>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ActionLook> _parser = new pb::MessageParser<ActionLook>(() => new ActionLook());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ActionLook> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionLook() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionLook(ActionLook other) : this() {
    rotation_ = other.rotation_;
    pitch_ = other.pitch_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionLook Clone() {
    return new ActionLook(this);
  }

  /// <summary>Field number for the "rotation" field.</summary>
  public const int RotationFieldNumber = 1;
  private float rotation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Rotation {
    get { return rotation_; }
    set {
      rotation_ = value;
    }
  }

  /// <summary>Field number for the "pitch" field.</summary>
  public const int PitchFieldNumber = 2;
  private float pitch_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Pitch {
    get { return pitch_; }
    set {
      pitch_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ActionLook);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ActionLook other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rotation, other.Rotation)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Pitch, other.Pitch)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Rotation != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rotation);
    if (Pitch != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Pitch);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Rotation != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(Rotation);
    }
    if (Pitch != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Pitch);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Rotation != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(Rotation);
    }
    if (Pitch != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Pitch);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Rotation != 0F) {
      size += 1 + 4;
    }
    if (Pitch != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ActionLook other) {
    if (other == null) {
      return;
    }
    if (other.Rotation != 0F) {
      Rotation = other.Rotation;
    }
    if (other.Pitch != 0F) {
      Pitch = other.Pitch;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          Rotation = input.ReadFloat();
          break;
        }
        case 21: {
          Pitch = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          Rotation = input.ReadFloat();
          break;
        }
        case 21: {
          Pitch = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ActionMoveLook : pb::IMessage<ActionMoveLook>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ActionMoveLook> _parser = new pb::MessageParser<ActionMoveLook>(() => new ActionMoveLook());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ActionMoveLook> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionMoveLook() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionMoveLook(ActionMoveLook other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    rotation_ = other.rotation_;
    pitch_ = other.pitch_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionMoveLook Clone() {
    return new ActionMoveLook(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private double x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private double y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 3;
  private double z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Z {
    get { return z_; }
    set {
      z_ = value;
    }
  }

  /// <summary>Field number for the "rotation" field.</summary>
  public const int RotationFieldNumber = 4;
  private float rotation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Rotation {
    get { return rotation_; }
    set {
      rotation_ = value;
    }
  }

  /// <summary>Field number for the "pitch" field.</summary>
  public const int PitchFieldNumber = 5;
  private float pitch_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Pitch {
    get { return pitch_; }
    set {
      pitch_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ActionMoveLook);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ActionMoveLook other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Z, other.Z)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rotation, other.Rotation)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Pitch, other.Pitch)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
    if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
    if (Z != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Z);
    if (Rotation != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rotation);
    if (Pitch != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Pitch);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (X != 0D) {
      output.WriteRawTag(9);
      output.WriteDouble(X);
    }
    if (Y != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(Y);
    }
    if (Z != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(Z);
    }
    if (Rotation != 0F) {
      output.WriteRawTag(37);
      output.WriteFloat(Rotation);
    }
    if (Pitch != 0F) {
      output.WriteRawTag(45);
      output.WriteFloat(Pitch);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (X != 0D) {
      output.WriteRawTag(9);
      output.WriteDouble(X);
    }
    if (Y != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(Y);
    }
    if (Z != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(Z);
    }
    if (Rotation != 0F) {
      output.WriteRawTag(37);
      output.WriteFloat(Rotation);
    }
    if (Pitch != 0F) {
      output.WriteRawTag(45);
      output.WriteFloat(Pitch);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0D) {
      size += 1 + 8;
    }
    if (Y != 0D) {
      size += 1 + 8;
    }
    if (Z != 0D) {
      size += 1 + 8;
    }
    if (Rotation != 0F) {
      size += 1 + 4;
    }
    if (Pitch != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ActionMoveLook other) {
    if (other == null) {
      return;
    }
    if (other.X != 0D) {
      X = other.X;
    }
    if (other.Y != 0D) {
      Y = other.Y;
    }
    if (other.Z != 0D) {
      Z = other.Z;
    }
    if (other.Rotation != 0F) {
      Rotation = other.Rotation;
    }
    if (other.Pitch != 0F) {
      Pitch = other.Pitch;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          X = input.ReadDouble();
          break;
        }
        case 17: {
          Y = input.ReadDouble();
          break;
        }
        case 25: {
          Z = input.ReadDouble();
          break;
        }
        case 37: {
          Rotation = input.ReadFloat();
          break;
        }
        case 45: {
          Pitch = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          X = input.ReadDouble();
          break;
        }
        case 17: {
          Y = input.ReadDouble();
          break;
        }
        case 25: {
          Z = input.ReadDouble();
          break;
        }
        case 37: {
          Rotation = input.ReadFloat();
          break;
        }
        case 45: {
          Pitch = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ActionMessage : pb::IMessage<ActionMessage>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ActionMessage> _parser = new pb::MessageParser<ActionMessage>(() => new ActionMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ActionMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionMessage(ActionMessage other) : this() {
    message_ = other.message_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionMessage Clone() {
    return new ActionMessage(this);
  }

  /// <summary>Field number for the "message" field.</summary>
  public const int MessageFieldNumber = 1;
  private string message_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Message {
    get { return message_; }
    set {
      message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ActionMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ActionMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Message != other.Message) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Message.Length != 0) hash ^= Message.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Message.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Message);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Message.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Message);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Message.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ActionMessage other) {
    if (other == null) {
      return;
    }
    if (other.Message.Length != 0) {
      Message = other.Message;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Message = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Message = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ActionBlockPlace : pb::IMessage<ActionBlockPlace>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ActionBlockPlace> _parser = new pb::MessageParser<ActionBlockPlace>(() => new ActionBlockPlace());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ActionBlockPlace> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionBlockPlace() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionBlockPlace(ActionBlockPlace other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    x2_ = other.x2_;
    y2_ = other.y2_;
    z2_ = other.z2_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionBlockPlace Clone() {
    return new ActionBlockPlace(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private int x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private int y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 3;
  private int z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Z {
    get { return z_; }
    set {
      z_ = value;
    }
  }

  /// <summary>Field number for the "x2" field.</summary>
  public const int X2FieldNumber = 4;
  private int x2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int X2 {
    get { return x2_; }
    set {
      x2_ = value;
    }
  }

  /// <summary>Field number for the "y2" field.</summary>
  public const int Y2FieldNumber = 5;
  private int y2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Y2 {
    get { return y2_; }
    set {
      y2_ = value;
    }
  }

  /// <summary>Field number for the "z2" field.</summary>
  public const int Z2FieldNumber = 6;
  private int z2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Z2 {
    get { return z2_; }
    set {
      z2_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ActionBlockPlace);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ActionBlockPlace other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (X != other.X) return false;
    if (Y != other.Y) return false;
    if (Z != other.Z) return false;
    if (X2 != other.X2) return false;
    if (Y2 != other.Y2) return false;
    if (Z2 != other.Z2) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0) hash ^= X.GetHashCode();
    if (Y != 0) hash ^= Y.GetHashCode();
    if (Z != 0) hash ^= Z.GetHashCode();
    if (X2 != 0) hash ^= X2.GetHashCode();
    if (Y2 != 0) hash ^= Y2.GetHashCode();
    if (Z2 != 0) hash ^= Z2.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (X != 0) {
      output.WriteRawTag(8);
      output.WriteSInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(16);
      output.WriteSInt32(Y);
    }
    if (Z != 0) {
      output.WriteRawTag(24);
      output.WriteSInt32(Z);
    }
    if (X2 != 0) {
      output.WriteRawTag(32);
      output.WriteSInt32(X2);
    }
    if (Y2 != 0) {
      output.WriteRawTag(40);
      output.WriteSInt32(Y2);
    }
    if (Z2 != 0) {
      output.WriteRawTag(48);
      output.WriteSInt32(Z2);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (X != 0) {
      output.WriteRawTag(8);
      output.WriteSInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(16);
      output.WriteSInt32(Y);
    }
    if (Z != 0) {
      output.WriteRawTag(24);
      output.WriteSInt32(Z);
    }
    if (X2 != 0) {
      output.WriteRawTag(32);
      output.WriteSInt32(X2);
    }
    if (Y2 != 0) {
      output.WriteRawTag(40);
      output.WriteSInt32(Y2);
    }
    if (Z2 != 0) {
      output.WriteRawTag(48);
      output.WriteSInt32(Z2);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(X);
    }
    if (Y != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Y);
    }
    if (Z != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Z);
    }
    if (X2 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(X2);
    }
    if (Y2 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Y2);
    }
    if (Z2 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Z2);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ActionBlockPlace other) {
    if (other == null) {
      return;
    }
    if (other.X != 0) {
      X = other.X;
    }
    if (other.Y != 0) {
      Y = other.Y;
    }
    if (other.Z != 0) {
      Z = other.Z;
    }
    if (other.X2 != 0) {
      X2 = other.X2;
    }
    if (other.Y2 != 0) {
      Y2 = other.Y2;
    }
    if (other.Z2 != 0) {
      Z2 = other.Z2;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          X = input.ReadSInt32();
          break;
        }
        case 16: {
          Y = input.ReadSInt32();
          break;
        }
        case 24: {
          Z = input.ReadSInt32();
          break;
        }
        case 32: {
          X2 = input.ReadSInt32();
          break;
        }
        case 40: {
          Y2 = input.ReadSInt32();
          break;
        }
        case 48: {
          Z2 = input.ReadSInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          X = input.ReadSInt32();
          break;
        }
        case 16: {
          Y = input.ReadSInt32();
          break;
        }
        case 24: {
          Z = input.ReadSInt32();
          break;
        }
        case 32: {
          X2 = input.ReadSInt32();
          break;
        }
        case 40: {
          Y2 = input.ReadSInt32();
          break;
        }
        case 48: {
          Z2 = input.ReadSInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ActionBlockBreak : pb::IMessage<ActionBlockBreak>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ActionBlockBreak> _parser = new pb::MessageParser<ActionBlockBreak>(() => new ActionBlockBreak());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ActionBlockBreak> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionBlockBreak() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionBlockBreak(ActionBlockBreak other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    status_ = other.status_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionBlockBreak Clone() {
    return new ActionBlockBreak(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private int x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private int y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 3;
  private int z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Z {
    get { return z_; }
    set {
      z_ = value;
    }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 4;
  private float status_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ActionBlockBreak);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ActionBlockBreak other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (X != other.X) return false;
    if (Y != other.Y) return false;
    if (Z != other.Z) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Status, other.Status)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0) hash ^= X.GetHashCode();
    if (Y != 0) hash ^= Y.GetHashCode();
    if (Z != 0) hash ^= Z.GetHashCode();
    if (Status != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Status);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (X != 0) {
      output.WriteRawTag(8);
      output.WriteSInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(16);
      output.WriteSInt32(Y);
    }
    if (Z != 0) {
      output.WriteRawTag(24);
      output.WriteSInt32(Z);
    }
    if (Status != 0F) {
      output.WriteRawTag(37);
      output.WriteFloat(Status);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (X != 0) {
      output.WriteRawTag(8);
      output.WriteSInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(16);
      output.WriteSInt32(Y);
    }
    if (Z != 0) {
      output.WriteRawTag(24);
      output.WriteSInt32(Z);
    }
    if (Status != 0F) {
      output.WriteRawTag(37);
      output.WriteFloat(Status);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(X);
    }
    if (Y != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Y);
    }
    if (Z != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Z);
    }
    if (Status != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ActionBlockBreak other) {
    if (other == null) {
      return;
    }
    if (other.X != 0) {
      X = other.X;
    }
    if (other.Y != 0) {
      Y = other.Y;
    }
    if (other.Z != 0) {
      Z = other.Z;
    }
    if (other.Status != 0F) {
      Status = other.Status;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          X = input.ReadSInt32();
          break;
        }
        case 16: {
          Y = input.ReadSInt32();
          break;
        }
        case 24: {
          Z = input.ReadSInt32();
          break;
        }
        case 37: {
          Status = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          X = input.ReadSInt32();
          break;
        }
        case 16: {
          Y = input.ReadSInt32();
          break;
        }
        case 24: {
          Z = input.ReadSInt32();
          break;
        }
        case 37: {
          Status = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ActionInventoryClick : pb::IMessage<ActionInventoryClick>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ActionInventoryClick> _parser = new pb::MessageParser<ActionInventoryClick>(() => new ActionInventoryClick());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ActionInventoryClick> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionInventoryClick() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionInventoryClick(ActionInventoryClick other) : this() {
    slot_ = other.slot_;
    type_ = other.type_;
    inventory_ = other.inventory_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionInventoryClick Clone() {
    return new ActionInventoryClick(this);
  }

  /// <summary>Field number for the "slot" field.</summary>
  public const int SlotFieldNumber = 1;
  private int slot_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Slot {
    get { return slot_; }
    set {
      slot_ = value;
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 2;
  private global::MouseClickType type_ = global::MouseClickType.Left;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MouseClickType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "inventory" field.</summary>
  public const int InventoryFieldNumber = 3;
  private global::InventoryType inventory_ = global::InventoryType.Main;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InventoryType Inventory {
    get { return inventory_; }
    set {
      inventory_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ActionInventoryClick);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ActionInventoryClick other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Slot != other.Slot) return false;
    if (Type != other.Type) return false;
    if (Inventory != other.Inventory) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Slot != 0) hash ^= Slot.GetHashCode();
    if (Type != global::MouseClickType.Left) hash ^= Type.GetHashCode();
    if (Inventory != global::InventoryType.Main) hash ^= Inventory.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Slot != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Slot);
    }
    if (Type != global::MouseClickType.Left) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Type);
    }
    if (Inventory != global::InventoryType.Main) {
      output.WriteRawTag(24);
      output.WriteEnum((int) Inventory);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Slot != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Slot);
    }
    if (Type != global::MouseClickType.Left) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Type);
    }
    if (Inventory != global::InventoryType.Main) {
      output.WriteRawTag(24);
      output.WriteEnum((int) Inventory);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Slot != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Slot);
    }
    if (Type != global::MouseClickType.Left) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (Inventory != global::InventoryType.Main) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Inventory);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ActionInventoryClick other) {
    if (other == null) {
      return;
    }
    if (other.Slot != 0) {
      Slot = other.Slot;
    }
    if (other.Type != global::MouseClickType.Left) {
      Type = other.Type;
    }
    if (other.Inventory != global::InventoryType.Main) {
      Inventory = other.Inventory;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Slot = input.ReadInt32();
          break;
        }
        case 16: {
          Type = (global::MouseClickType) input.ReadEnum();
          break;
        }
        case 24: {
          Inventory = (global::InventoryType) input.ReadEnum();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Slot = input.ReadInt32();
          break;
        }
        case 16: {
          Type = (global::MouseClickType) input.ReadEnum();
          break;
        }
        case 24: {
          Inventory = (global::InventoryType) input.ReadEnum();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ActionInventoryPick : pb::IMessage<ActionInventoryPick>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ActionInventoryPick> _parser = new pb::MessageParser<ActionInventoryPick>(() => new ActionInventoryPick());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ActionInventoryPick> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionInventoryPick() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionInventoryPick(ActionInventoryPick other) : this() {
    slot_ = other.slot_;
    slot2_ = other.slot2_;
    block_ = other.block_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionInventoryPick Clone() {
    return new ActionInventoryPick(this);
  }

  /// <summary>Field number for the "slot" field.</summary>
  public const int SlotFieldNumber = 1;
  private int slot_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Slot {
    get { return slot_; }
    set {
      slot_ = value;
    }
  }

  /// <summary>Field number for the "slot2" field.</summary>
  public const int Slot2FieldNumber = 2;
  private int slot2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Slot2 {
    get { return slot2_; }
    set {
      slot2_ = value;
    }
  }

  /// <summary>Field number for the "block" field.</summary>
  public const int BlockFieldNumber = 3;
  private int block_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Block {
    get { return block_; }
    set {
      block_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ActionInventoryPick);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ActionInventoryPick other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Slot != other.Slot) return false;
    if (Slot2 != other.Slot2) return false;
    if (Block != other.Block) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Slot != 0) hash ^= Slot.GetHashCode();
    if (Slot2 != 0) hash ^= Slot2.GetHashCode();
    if (Block != 0) hash ^= Block.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Slot != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Slot);
    }
    if (Slot2 != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Slot2);
    }
    if (Block != 0) {
      output.WriteRawTag(24);
      output.WriteSInt32(Block);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Slot != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Slot);
    }
    if (Slot2 != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Slot2);
    }
    if (Block != 0) {
      output.WriteRawTag(24);
      output.WriteSInt32(Block);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Slot != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Slot);
    }
    if (Slot2 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Slot2);
    }
    if (Block != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Block);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ActionInventoryPick other) {
    if (other == null) {
      return;
    }
    if (other.Slot != 0) {
      Slot = other.Slot;
    }
    if (other.Slot2 != 0) {
      Slot2 = other.Slot2;
    }
    if (other.Block != 0) {
      Block = other.Block;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Slot = input.ReadInt32();
          break;
        }
        case 16: {
          Slot2 = input.ReadInt32();
          break;
        }
        case 24: {
          Block = input.ReadSInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Slot = input.ReadInt32();
          break;
        }
        case 16: {
          Slot2 = input.ReadInt32();
          break;
        }
        case 24: {
          Block = input.ReadSInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ActionInventoryOpen : pb::IMessage<ActionInventoryOpen>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ActionInventoryOpen> _parser = new pb::MessageParser<ActionInventoryOpen>(() => new ActionInventoryOpen());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ActionInventoryOpen> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionInventoryOpen() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionInventoryOpen(ActionInventoryOpen other) : this() {
    inventory_ = other.inventory_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionInventoryOpen Clone() {
    return new ActionInventoryOpen(this);
  }

  /// <summary>Field number for the "inventory" field.</summary>
  public const int InventoryFieldNumber = 1;
  private global::ContainerType inventory_ = global::ContainerType.Player;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ContainerType Inventory {
    get { return inventory_; }
    set {
      inventory_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ActionInventoryOpen);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ActionInventoryOpen other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Inventory != other.Inventory) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Inventory != global::ContainerType.Player) hash ^= Inventory.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Inventory != global::ContainerType.Player) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Inventory);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Inventory != global::ContainerType.Player) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Inventory);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Inventory != global::ContainerType.Player) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Inventory);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ActionInventoryOpen other) {
    if (other == null) {
      return;
    }
    if (other.Inventory != global::ContainerType.Player) {
      Inventory = other.Inventory;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Inventory = (global::ContainerType) input.ReadEnum();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Inventory = (global::ContainerType) input.ReadEnum();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ActionInventoryClose : pb::IMessage<ActionInventoryClose>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ActionInventoryClose> _parser = new pb::MessageParser<ActionInventoryClose>(() => new ActionInventoryClose());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ActionInventoryClose> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionInventoryClose() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionInventoryClose(ActionInventoryClose other) : this() {
    inventory_ = other.inventory_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionInventoryClose Clone() {
    return new ActionInventoryClose(this);
  }

  /// <summary>Field number for the "inventory" field.</summary>
  public const int InventoryFieldNumber = 1;
  private global::ContainerType inventory_ = global::ContainerType.Player;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ContainerType Inventory {
    get { return inventory_; }
    set {
      inventory_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ActionInventoryClose);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ActionInventoryClose other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Inventory != other.Inventory) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Inventory != global::ContainerType.Player) hash ^= Inventory.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Inventory != global::ContainerType.Player) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Inventory);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Inventory != global::ContainerType.Player) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Inventory);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Inventory != global::ContainerType.Player) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Inventory);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ActionInventoryClose other) {
    if (other == null) {
      return;
    }
    if (other.Inventory != global::ContainerType.Player) {
      Inventory = other.Inventory;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Inventory = (global::ContainerType) input.ReadEnum();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Inventory = (global::ContainerType) input.ReadEnum();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ActionClick : pb::IMessage<ActionClick>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ActionClick> _parser = new pb::MessageParser<ActionClick>(() => new ActionClick());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ActionClick> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionClick() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionClick(ActionClick other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    type_ = other.type_;
    onBlock_ = other.onBlock_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionClick Clone() {
    return new ActionClick(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private int x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private int y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 3;
  private int z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Z {
    get { return z_; }
    set {
      z_ = value;
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 4;
  private global::MouseClickType type_ = global::MouseClickType.Left;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MouseClickType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "on_block" field.</summary>
  public const int OnBlockFieldNumber = 5;
  private bool onBlock_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool OnBlock {
    get { return onBlock_; }
    set {
      onBlock_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ActionClick);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ActionClick other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (X != other.X) return false;
    if (Y != other.Y) return false;
    if (Z != other.Z) return false;
    if (Type != other.Type) return false;
    if (OnBlock != other.OnBlock) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0) hash ^= X.GetHashCode();
    if (Y != 0) hash ^= Y.GetHashCode();
    if (Z != 0) hash ^= Z.GetHashCode();
    if (Type != global::MouseClickType.Left) hash ^= Type.GetHashCode();
    if (OnBlock != false) hash ^= OnBlock.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (X != 0) {
      output.WriteRawTag(8);
      output.WriteSInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(16);
      output.WriteSInt32(Y);
    }
    if (Z != 0) {
      output.WriteRawTag(24);
      output.WriteSInt32(Z);
    }
    if (Type != global::MouseClickType.Left) {
      output.WriteRawTag(32);
      output.WriteEnum((int) Type);
    }
    if (OnBlock != false) {
      output.WriteRawTag(40);
      output.WriteBool(OnBlock);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (X != 0) {
      output.WriteRawTag(8);
      output.WriteSInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(16);
      output.WriteSInt32(Y);
    }
    if (Z != 0) {
      output.WriteRawTag(24);
      output.WriteSInt32(Z);
    }
    if (Type != global::MouseClickType.Left) {
      output.WriteRawTag(32);
      output.WriteEnum((int) Type);
    }
    if (OnBlock != false) {
      output.WriteRawTag(40);
      output.WriteBool(OnBlock);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(X);
    }
    if (Y != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Y);
    }
    if (Z != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Z);
    }
    if (Type != global::MouseClickType.Left) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (OnBlock != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ActionClick other) {
    if (other == null) {
      return;
    }
    if (other.X != 0) {
      X = other.X;
    }
    if (other.Y != 0) {
      Y = other.Y;
    }
    if (other.Z != 0) {
      Z = other.Z;
    }
    if (other.Type != global::MouseClickType.Left) {
      Type = other.Type;
    }
    if (other.OnBlock != false) {
      OnBlock = other.OnBlock;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          X = input.ReadSInt32();
          break;
        }
        case 16: {
          Y = input.ReadSInt32();
          break;
        }
        case 24: {
          Z = input.ReadSInt32();
          break;
        }
        case 32: {
          Type = (global::MouseClickType) input.ReadEnum();
          break;
        }
        case 40: {
          OnBlock = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          X = input.ReadSInt32();
          break;
        }
        case 16: {
          Y = input.ReadSInt32();
          break;
        }
        case 24: {
          Z = input.ReadSInt32();
          break;
        }
        case 32: {
          Type = (global::MouseClickType) input.ReadEnum();
          break;
        }
        case 40: {
          OnBlock = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ActionClickEntity : pb::IMessage<ActionClickEntity>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ActionClickEntity> _parser = new pb::MessageParser<ActionClickEntity>(() => new ActionClickEntity());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ActionClickEntity> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionClickEntity() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionClickEntity(ActionClickEntity other) : this() {
    uuid_ = other.uuid_;
    type_ = other.type_;
    distance_ = other.distance_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionClickEntity Clone() {
    return new ActionClickEntity(this);
  }

  /// <summary>Field number for the "uuid" field.</summary>
  public const int UuidFieldNumber = 1;
  private string uuid_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Uuid {
    get { return uuid_; }
    set {
      uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 2;
  private string type_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Type {
    get { return type_; }
    set {
      type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "distance" field.</summary>
  public const int DistanceFieldNumber = 3;
  private float distance_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Distance {
    get { return distance_; }
    set {
      distance_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ActionClickEntity);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ActionClickEntity other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Uuid != other.Uuid) return false;
    if (Type != other.Type) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Distance, other.Distance)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
    if (Type.Length != 0) hash ^= Type.GetHashCode();
    if (Distance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Distance);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Uuid.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Uuid);
    }
    if (Type.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Type);
    }
    if (Distance != 0F) {
      output.WriteRawTag(29);
      output.WriteFloat(Distance);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Uuid.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Uuid);
    }
    if (Type.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Type);
    }
    if (Distance != 0F) {
      output.WriteRawTag(29);
      output.WriteFloat(Distance);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Uuid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
    }
    if (Type.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
    }
    if (Distance != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ActionClickEntity other) {
    if (other == null) {
      return;
    }
    if (other.Uuid.Length != 0) {
      Uuid = other.Uuid;
    }
    if (other.Type.Length != 0) {
      Type = other.Type;
    }
    if (other.Distance != 0F) {
      Distance = other.Distance;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Uuid = input.ReadString();
          break;
        }
        case 18: {
          Type = input.ReadString();
          break;
        }
        case 29: {
          Distance = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Uuid = input.ReadString();
          break;
        }
        case 18: {
          Type = input.ReadString();
          break;
        }
        case 29: {
          Distance = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ActionKeyPress : pb::IMessage<ActionKeyPress>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ActionKeyPress> _parser = new pb::MessageParser<ActionKeyPress>(() => new ActionKeyPress());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ActionKeyPress> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionKeyPress() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionKeyPress(ActionKeyPress other) : this() {
    key_ = other.key_;
    type_ = other.type_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActionKeyPress Clone() {
    return new ActionKeyPress(this);
  }

  /// <summary>Field number for the "key" field.</summary>
  public const int KeyFieldNumber = 1;
  private string key_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Key {
    get { return key_; }
    set {
      key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 2;
  private bool type_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ActionKeyPress);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ActionKeyPress other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Key != other.Key) return false;
    if (Type != other.Type) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Key.Length != 0) hash ^= Key.GetHashCode();
    if (Type != false) hash ^= Type.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Key.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Key);
    }
    if (Type != false) {
      output.WriteRawTag(16);
      output.WriteBool(Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Key.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Key);
    }
    if (Type != false) {
      output.WriteRawTag(16);
      output.WriteBool(Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Key.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
    }
    if (Type != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ActionKeyPress other) {
    if (other == null) {
      return;
    }
    if (other.Key.Length != 0) {
      Key = other.Key;
    }
    if (other.Type != false) {
      Type = other.Type;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Key = input.ReadString();
          break;
        }
        case 16: {
          Type = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Key = input.ReadString();
          break;
        }
        case 16: {
          Type = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class WorldChunkIsLoadedResponce : pb::IMessage<WorldChunkIsLoadedResponce>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<WorldChunkIsLoadedResponce> _parser = new pb::MessageParser<WorldChunkIsLoadedResponce>(() => new WorldChunkIsLoadedResponce());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<WorldChunkIsLoadedResponce> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WorldChunkIsLoadedResponce() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WorldChunkIsLoadedResponce(WorldChunkIsLoadedResponce other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    loaded_ = other.loaded_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WorldChunkIsLoadedResponce Clone() {
    return new WorldChunkIsLoadedResponce(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private int x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private int y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 3;
  private int z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Z {
    get { return z_; }
    set {
      z_ = value;
    }
  }

  /// <summary>Field number for the "loaded" field.</summary>
  public const int LoadedFieldNumber = 4;
  private bool loaded_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Loaded {
    get { return loaded_; }
    set {
      loaded_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as WorldChunkIsLoadedResponce);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(WorldChunkIsLoadedResponce other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (X != other.X) return false;
    if (Y != other.Y) return false;
    if (Z != other.Z) return false;
    if (Loaded != other.Loaded) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0) hash ^= X.GetHashCode();
    if (Y != 0) hash ^= Y.GetHashCode();
    if (Z != 0) hash ^= Z.GetHashCode();
    if (Loaded != false) hash ^= Loaded.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (X != 0) {
      output.WriteRawTag(8);
      output.WriteSInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(16);
      output.WriteSInt32(Y);
    }
    if (Z != 0) {
      output.WriteRawTag(24);
      output.WriteSInt32(Z);
    }
    if (Loaded != false) {
      output.WriteRawTag(32);
      output.WriteBool(Loaded);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (X != 0) {
      output.WriteRawTag(8);
      output.WriteSInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(16);
      output.WriteSInt32(Y);
    }
    if (Z != 0) {
      output.WriteRawTag(24);
      output.WriteSInt32(Z);
    }
    if (Loaded != false) {
      output.WriteRawTag(32);
      output.WriteBool(Loaded);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(X);
    }
    if (Y != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Y);
    }
    if (Z != 0) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Z);
    }
    if (Loaded != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(WorldChunkIsLoadedResponce other) {
    if (other == null) {
      return;
    }
    if (other.X != 0) {
      X = other.X;
    }
    if (other.Y != 0) {
      Y = other.Y;
    }
    if (other.Z != 0) {
      Z = other.Z;
    }
    if (other.Loaded != false) {
      Loaded = other.Loaded;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          X = input.ReadSInt32();
          break;
        }
        case 16: {
          Y = input.ReadSInt32();
          break;
        }
        case 24: {
          Z = input.ReadSInt32();
          break;
        }
        case 32: {
          Loaded = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          X = input.ReadSInt32();
          break;
        }
        case 16: {
          Y = input.ReadSInt32();
          break;
        }
        case 24: {
          Z = input.ReadSInt32();
          break;
        }
        case 32: {
          Loaded = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class PluginMessage : pb::IMessage<PluginMessage>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PluginMessage> _parser = new pb::MessageParser<PluginMessage>(() => new PluginMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PluginMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PluginMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PluginMessage(PluginMessage other) : this() {
    key_ = other.key_;
    version_ = other.version_;
    value_ = other.value_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PluginMessage Clone() {
    return new PluginMessage(this);
  }

  /// <summary>Field number for the "key" field.</summary>
  public const int KeyFieldNumber = 1;
  private string key_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Key {
    get { return key_; }
    set {
      key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "version" field.</summary>
  public const int VersionFieldNumber = 2;
  private uint version_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Version {
    get { return version_; }
    set {
      version_ = value;
    }
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 3;
  private pb::ByteString value_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Value {
    get { return value_; }
    set {
      value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PluginMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PluginMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Key != other.Key) return false;
    if (Version != other.Version) return false;
    if (Value != other.Value) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Key.Length != 0) hash ^= Key.GetHashCode();
    if (Version != 0) hash ^= Version.GetHashCode();
    if (Value.Length != 0) hash ^= Value.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Key.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Key);
    }
    if (Version != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Version);
    }
    if (Value.Length != 0) {
      output.WriteRawTag(26);
      output.WriteBytes(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Key.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Key);
    }
    if (Version != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Version);
    }
    if (Value.Length != 0) {
      output.WriteRawTag(26);
      output.WriteBytes(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Key.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
    }
    if (Version != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
    }
    if (Value.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PluginMessage other) {
    if (other == null) {
      return;
    }
    if (other.Key.Length != 0) {
      Key = other.Key;
    }
    if (other.Version != 0) {
      Version = other.Version;
    }
    if (other.Value.Length != 0) {
      Value = other.Value;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Key = input.ReadString();
          break;
        }
        case 16: {
          Version = input.ReadUInt32();
          break;
        }
        case 26: {
          Value = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Key = input.ReadString();
          break;
        }
        case 16: {
          Version = input.ReadUInt32();
          break;
        }
        case 26: {
          Value = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
